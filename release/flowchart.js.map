{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///flowchart.js","webpack:///webpack/bootstrap b25fc93d093648e4134a","webpack:///./index.js","webpack:///./src/flowchart.helpers.js","webpack:///./src/flowchart.symbol.js","webpack:///./src/flowchart.functions.js","webpack:///./src/flowchart.parse.js","webpack:///./src/flowchart.symbol.condition.js","webpack:///./src/flowchart.chart.js","webpack:///./src/flowchart.defaults.js","webpack:///./src/flowchart.shim.js","webpack:///./src/flowchart.symbol.end.js","webpack:///./src/flowchart.symbol.inputoutput.js","webpack:///./src/flowchart.symbol.operation.js","webpack:///./src/flowchart.symbol.start.js","webpack:///./src/flowchart.symbol.subroutine.js","webpack:///./src/jquery-plugin.js","webpack:///external \"Raphael\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_15__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","parse","FlowChart","window","flowchart","_defaults","options","defaultOptions","merged","attrname","_inherits","ctor","superCtor","Object","super_","prototype","create","constructor","value","enumerable","writable","configurable","TempCtor","defaults","inherits","Symbol","chart","symbol","group","paper","set","connectedTo","symbolType","flowstate","lineStyle","key","next_direction","next","undefined","text","node","setAttribute","getAttr","attr","text-anchor","x","fill","font-size","font","fontF","fontW","font-family","font-weight","link","target","maxWidth","words","split","tempText","ii","length","word","getBBox","width","substring","push","tmpMargin","stroke","stroke-width","height","insertBefore","y","initialize","drawAPI","drawLine","checkLineIntersection","attName","opt1","opt3","opt2","symbols","transform","getCenter","getX","getY","shiftX","setX","shiftY","setY","getTop","getBottom","getLeft","getRight","render","lineLength","rightPoint","isPositioned","self","shift","symb","hasSymbolUnder","len","diff","Math","abs","bottomPoint","renderLines","drawLineTo","origin","indexOf","line","right","bottom","left","symbolX","symbolY","symbolTop","symbolRight","symbolLeft","isOnSameColumn","isOnSameLine","isUnder","isUpper","isLeft","isRight","maxX","lineWith","rightStart","topEnd","bottomStart","diffX","leftStart","leftEnd","rightEnd","l","llen","lines","otherLine","ePath","lPath","iP","lenP","newPath","line1_from_x","line1_from_y","line1_to_x","line1_to_y","lP","lenlP","newLinePath","line2_from_x","line2_from_y","line2_to_x","line2_to_y","res","onLine1","onLine2","newSegment","splice","maxXFromLine","drawPath","location","points","path","pathValues","from","to","toString","arrow-end","centerText","textPath","isHorizontal","firstTo","line1StartX","line1StartY","line1EndX","line1EndY","line2StartX","line2StartY","line2EndX","line2EndY","denominator","b","numerator1","numerator2","result","input","getStyle","s","startIndex","endIndex","getSymbValue","getSymbol","getNextPath","flowSymb","trim","start","drawSVG","container","getDisplaySymbol","dispSymbols","Start","diagram","End","Operation","InputOutput","Subroutine","Condition","Error","clean","constructChart","prevDisp","prev","dispSymb","startWith","pathOk","yes","no","then","prevBreak","i0","i0len","line0","replace","substr","currentLine","parts","params","match","entries","entry","sub","join","txtAndState","pop","flowSymbols","lenS","symbVal","realSymb","direction","condOpt","nextSymb","lineStyleSymbols","curSymb","JSON","textMargin","yes_direction","no_direction","direction_yes","direction_no","max","startX","startY","yes_symbol","no_symbol","bottom_symbol","right_symbol","Raphael","handle","flowChart","nextSymbol","maxHeight","maxY","minX","minY","x2","y2","scale","lineWidth","setSize","setViewBox","paperDom","canvas","parentNode","removeChild","line-width","line-length","text-margin","font-color","line-color","element-color","yes-text","no-text","class","end","condition","inputoutput","operation","subroutine","Array","searchElement","TypeError","t","n","arguments","Number","Infinity","floor","k","lastIndexOf","min","String","rect","innerWrap","jQuery","$","fn","each","$this","html"],"mappings":";;;;;CAAA,SAAAA,MAAAC;IACA,uBAAAC,WAAA,mBAAAC,QACAA,OAAAD,UAAAD,QAAAG,QAAA,kBACA,yBAAAC,iBAAAC,KACAD,SAAA,aAAAJ,eACA;QACA,IAAAM,IAAAN,QAAA,mBAAAC,UAAAE,QAAA,aAAAJ,KAAA;QACA,SAAAQ,KAAAD,IAAA,mBAAAL,oBAAAF,MAAAQ,KAAAD,EAAAC;;EAECC,MAAA,SAAAC;;IACD,OCAgB,SAAUC;;;;;QCN1B,SAAAC,oBAAAC;;;;;YAGA,IAAAC,iBAAAD;YACA,OAAAC,iBAAAD,UAAAX;;;;;YAGA,IAAAC,SAAAW,iBAAAD;;gBACAX;;gBACAa,IAAAF;;gBACAG,SAAA;;;;;;;;;;;;;;YAUA,OANAL,QAAAE,UAAAI,KAAAd,OAAAD,SAAAC,eAAAD,SAAAU;YAGAT,OAAAa,UAAA,GAGAb,OAAAD;;;;;;QAvBA,IAAAY;;;;;;;;;;;;;;;;;;QAqCA,OATAF,oBAAAM,IAAAP,SAGAC,oBAAAO,IAAAL;QAGAF,oBAAAQ,IAAA,IAGAR,oBAAA;;;;;;IDmBM,SAAUT,QAAQD,SAASU;QEzDjCA,gDAAA;QACA,IAAAS,QAAAT,iDAAA;QACAA,+CAAA;QAEA,IAAAU;YACAD;;QAGA,sBAAAE,WACAA,OAAAC,YAAAF,YAGAnB,OAAAD,UAAAoB;;;;;;IFmEM,SAAUnB,QAAQD;QG/ExB,SAAAuB,UAAAC,SAAAC;YACA,KAAAD,WAAA,qBAAAA,SACA,OAAAC;YAGA,IAAAC;YACA,SAAAC,YAAAF,gBACAC,OAAAC,YAAAF,eAAAE;YAGA,KAAAA,YAAAH,SACAA,QAAAG,cACA,mBAAAD,OAAAC,YACAD,OAAAC,YAAAJ,UAAAG,OAAAC,WAAAH,QAAAG,aAEAD,OAAAC,YAAAH,QAAAG;YAIA,OAAAD;;QAGA,SAAAE,UAAAC,MAAAC;YACA,yBAAAC,OAAA;YAEAF,KAAAG,SAAAF,WACAD,KAAAI,YAAAF,OAAAG,OAAAJ,UAAAG;gBACAE;oBACAC,OAAAP;oBACAQ,aAAA;oBACAC,WAAA;oBACAC,eAAA;;qBAGA;;gBAEAV,KAAAG,SAAAF;gBACA,IAAAU,WAAA;gBACAA,SAAAP,YAAAH,UAAAG,WACAJ,KAAAI,YAAA,IAAAO,YACAX,KAAAI,UAAAE,cAAAN;;;;;QAMA5B,OAAAD;YACAyC,UAAAlB;YACAmB,UAAAd;;;;;;;IH0FM,SAAU3B,QAAQD,SAASU;QItIjC,SAAAiC,OAAAC,OAAApB,SAAAqB;YACAtC,KAAAqC,eACArC,KAAAuC,QAAAvC,KAAAqC,MAAAG,MAAAC,OACAzC,KAAAsC,iBACAtC,KAAA0C;YACA1C,KAAA2C,aAAA1B,QAAA0B,YACA3C,KAAA4C,YAAA3B,QAAA2B,aAAA;YACA5C,KAAA6C,YAAA5B,QAAA4B,iBACA7C,KAAA8C,MAAA7B,QAAA6B,OAAA,IAEA9C,KAAA+C,iBAAA9B,QAAA+B,QAAA/B,QAAA,iBAAAA,QAAA,iBAAAgC;YAEAjD,KAAAkD,OAAAlD,KAAAqC,MAAAG,MAAAU,KAAA,MAAAjC,QAAAiC;YAEAjC,QAAA6B,QAAA9C,KAAAkD,KAAAC,KAAA7C,KAAAW,QAAA6B,MAAA,MACA9C,KAAAkD,KAAAC,KAAAC,aAAA,SAAApD,KAAAqD,QAAA;YAEArD,KAAAkD,KAAAI;gBACAC,eAAA;gBACAC,GAAAxD,KAAAqD,QAAA;gBACAI,MAAAzD,KAAAqD,QAAA;gBACAK,aAAA1D,KAAAqD,QAAA;;YAGA,IAAAM,OAAA3D,KAAAqD,QAAA,SACAO,QAAA5D,KAAAqD,QAAA,gBACAQ,QAAA7D,KAAAqD,QAAA;YAEAM,QAAA3D,KAAAkD,KAAAI;gBAAAK;gBACAC,SAAA5D,KAAAkD,KAAAI;gBAAAQ,eAAAF;gBACAC,SAAA7D,KAAAkD,KAAAI;gBAAAS,eAAAF;gBAEA5C,QAAA+C,QAAAhE,KAAAkD,KAAAI,KAAA,QAAArC,QAAA+C,OACA/C,QAAAgD,UAAAjE,KAAAkD,KAAAI,KAAA,UAAArC,QAAAgD;YAEA,IAAAC,WAAAlE,KAAAqD,QAAA;YACA,IAAAa,UAAA;gBAIA,SAFAC,QAAAlD,QAAAiC,KAAAkB,MAAA,MACAC,WAAA,IACAtE,IAAA,GAAAuE,KAAAH,MAAAI,QAAAxE,IAAAuE,IAAAvE,KAAA;oBACA,IAAAyE,OAAAL,MAAApE;oBACAC,KAAAkD,KAAAI,KAAA,QAAAe,WAAA,MAAAG,OAEAH,YADArE,KAAAkD,KAAAuB,UAAAC,QAAAR,WACA,OAAAM,OAEA,MAAAA;;gBAGAxE,KAAAkD,KAAAI,KAAA,QAAAe,SAAAM,UAAA;;YAKA,IAFA3E,KAAAuC,MAAAqC,KAAA5E,KAAAkD,OAEAZ,QAAA;gBACA,IAAAuC,YAAA7E,KAAAqD,QAAA;gBAEAf,OAAAgB;oBACAG,MAAAzD,KAAAqD,QAAA;oBACAyB,QAAA9E,KAAAqD,QAAA;oBACA0B,gBAAA/E,KAAAqD,QAAA;oBACAqB,OAAA1E,KAAAkD,KAAAuB,UAAAC,QAAA,IAAAG;oBACAG,QAAAhF,KAAAkD,KAAAuB,UAAAO,SAAA,IAAAH;oBAGAvC,OAAAa,KAAAC,aAAA,SAAApD,KAAAqD,QAAA,WAEApC,QAAA+C,QAAA1B,OAAAgB,KAAA,QAAArC,QAAA+C;gBACA/C,QAAAgD,UAAA3B,OAAAgB,KAAA,UAAArC,QAAAgD,SACAhD,QAAA6B,QAAAR,OAAAa,KAAA7C,KAAAW,QAAA6B;gBAEA9C,KAAAuC,MAAAqC,KAAAtC,SACAA,OAAA2C,aAAAjF,KAAAkD,OAEAlD,KAAAkD,KAAAI;oBACA4B,GAAA5C,OAAAmC,UAAAO,SAAA;oBAGAhF,KAAAmF;;;QAlFA,IAAAC,UAAAjF,iDAAA,IACAkF,WAAAD,QAAAC,UACAC,wBAAAF,QAAAE;;QAsFAlD,OAAAV,UAAA2B,UAAA,SAAAkC;YACA,IAAAvF,KAAAqC,OAAA;gBAGA,IAEAmD,MAFAC,OAAAzF,KAAAqC,MAAA,UAAArC,KAAAqC,MAAApB,QAAAsE,WAAAtC,QACAyC,OAAA1F,KAAAqC,MAAApB,QAAA,UAAAjB,KAAAqC,MAAApB,QAAA0E,QAAA3F,KAAA2C,YAAA4C,WAAAtC;gBAKA,OAHAjD,KAAAqC,MAAApB,QAAA2B,aAAA5C,KAAAqC,MAAApB,QAAA2B,UAAA5C,KAAA4C,eACA4C,OAAAxF,KAAAqC,MAAApB,QAAA2B,UAAA5C,KAAA4C,WAAA2C;gBAEAC,QAAAE,QAAAD;;WAGArD,OAAAV,UAAAyD,aAAA;YACAnF,KAAAuC,MAAAqD,UAAA,MAAA5F,KAAAqD,QAAA,sBAAArD,KAAAqD,QAAA;YAEArD,KAAA0E,QAAA1E,KAAAuC,MAAAkC,UAAAC,OACA1E,KAAAgF,SAAAhF,KAAAuC,MAAAkC,UAAAO;WAGA5C,OAAAV,UAAAmE,YAAA;YACA;gBAAArC,GAAAxD,KAAA8F,SAAA9F,KAAA0E,QAAA;gBACAQ,GAAAlF,KAAA+F,SAAA/F,KAAAgF,SAAA;;WAGA5C,OAAAV,UAAAoE,OAAA;YACA,OAAA9F,KAAAuC,MAAAkC,UAAAjB;WAGApB,OAAAV,UAAAqE,OAAA;YACA,OAAA/F,KAAAuC,MAAAkC,UAAAS;WAGA9C,OAAAV,UAAAsE,SAAA,SAAAxC;YACAxD,KAAAuC,MAAAqD,UAAA,OAAA5F,KAAA8F,SAAAtC,KAAA,MAAAxD,KAAA+F;WAGA3D,OAAAV,UAAAuE,OAAA,SAAAzC;YACAxD,KAAAuC,MAAAqD,UAAA,MAAApC,IAAA,MAAAxD,KAAA+F;WAGA3D,OAAAV,UAAAwE,SAAA,SAAAhB;YACAlF,KAAAuC,MAAAqD,UAAA,MAAA5F,KAAA8F,SAAA,OAAA9F,KAAA+F,SAAAb;WAGA9C,OAAAV,UAAAyE,OAAA,SAAAjB;YACAlF,KAAAuC,MAAAqD,UAAA,MAAA5F,KAAA8F,SAAA,MAAAZ;WAGA9C,OAAAV,UAAA0E,SAAA;YACA,IAAAlB,IAAAlF,KAAA+F,QACAvC,IAAAxD,KAAA8F,SAAA9F,KAAA0E,QAAA;YACA;gBAAAlB;gBAAA0B;;WAGA9C,OAAAV,UAAA2E,YAAA;YACA,IAAAnB,IAAAlF,KAAA+F,SAAA/F,KAAAgF,QACAxB,IAAAxD,KAAA8F,SAAA9F,KAAA0E,QAAA;YACA;gBAAAlB;gBAAA0B;;WAGA9C,OAAAV,UAAA4E,UAAA;YACA,IAAApB,IAAAlF,KAAA+F,SAAA/F,KAAAuC,MAAAkC,UAAAO,SAAA,GACAxB,IAAAxD,KAAA8F;YACA;gBAAAtC;gBAAA0B;;WAGA9C,OAAAV,UAAA6E,WAAA;YACA,IAAArB,IAAAlF,KAAA+F,SAAA/F,KAAAuC,MAAAkC,UAAAO,SAAA,GACAxB,IAAAxD,KAAA8F,SAAA9F,KAAAuC,MAAAkC,UAAAC;YACA;gBAAAlB;gBAAA0B;;WAGA9C,OAAAV,UAAA8E,SAAA;YACA,IAAAxG,KAAAgD,MAAA;gBAEA,IAAAyD,aAAAzG,KAAAqD,QAAA;gBAEA,gBAAArD,KAAA+C,gBAAA;oBAEA,IAAA2D,aAAA1G,KAAAuG;oBAEA,KAAAvG,KAAAgD,KAAA2D,cAAA;wBAEA3G,KAAAgD,KAAAmD,KAAAO,WAAAxB,IAAAlF,KAAAgD,KAAAgC,SAAA,IACAhF,KAAAgD,KAAAgD,OAAAhG,KAAAuC,MAAAkC,UAAAjB,IAAAxD,KAAA0E,QAAA+B;wBAEA,IAAAG,OAAA5G;yBACA,SAAA6G;4BAGA,SADAC,MADAC,kBAAA,GAEAhH,IAAA,GAAAiH,MAAAJ,KAAAvE,MAAAsD,QAAApB,QAAAxE,IAAAiH,KAAAjH,KAAA;gCACA+G,OAAAF,KAAAvE,MAAAsD,QAAA5F;gCAEA,IAAAkH,OAAAC,KAAAC,IAAAL,KAAAjB,YAAArC,IAAAoD,KAAA5D,KAAA6C,YAAArC;gCACA,IAAAsD,KAAAjB,YAAAX,IAAA0B,KAAA5D,KAAA6C,YAAAX,KAAA+B,QAAAL,KAAA5D,KAAA0B,QAAA;oCACAqC,kBAAA;oCACA;;;4BAIAA,mBACAH,KAAA5D,KAAAiD,KAAAa,KAAAhB,SAAAgB,KAAApC,QAAA+B,aACAI;6BAIA7G,KAAAgD,KAAA2D,gBAAA,GAEA3G,KAAAgD,KAAAwD;;uBAEA;oBACA,IAAAY,cAAApH,KAAAqG;oBAEArG,KAAAgD,KAAA2D,iBACA3G,KAAAgD,KAAAkD,OAAAlG,KAAA+F,SAAA/F,KAAAgF,SAAAyB;oBACAzG,KAAAgD,KAAAiD,KAAAmB,YAAA5D,IAAAxD,KAAAgD,KAAA0B,QAAA,IACA1E,KAAAgD,KAAA2D,gBAAA;oBAEA3G,KAAAgD,KAAAwD;;;WAMApE,OAAAV,UAAA2F,cAAA;YACArH,KAAAgD,SACAhD,KAAA+C,iBACA/C,KAAAsH,WAAAtH,KAAAgD,MAAA,IAAAhD,KAAA+C,kBAEA/C,KAAAsH,WAAAtH,KAAAgD;WAKAZ,OAAAV,UAAA4F,aAAA,SAAAhF,QAAAY,MAAAqE;YACAvH,KAAA0C,YAAA8E,QAAAlF,UAAA,KACAtC,KAAA0C,YAAAkC,KAAAtC;YAGA,IAoBAmF,MApBAjE,IAAAxD,KAAA6F,YAAArC,GACA0B,IAAAlF,KAAA6F,YAAAX,GACAwC,QAAA1H,KAAAuG,YACAoB,SAAA3H,KAAAqG,aACAuB,OAAA5H,KAAAsG,WAEAuB,UAAAvF,OAAAuD,YAAArC,GACAsE,UAAAxF,OAAAuD,YAAAX,GACA6C,YAAAzF,OAAA8D,UACA4B,cAAA1F,OAAAiE,YACA0B,aAAA3F,OAAAgE,WAEA4B,iBAAA1E,MAAAqE,SACAM,eAAAjD,MAAA4C,SACAM,UAAAlD,IAAA4C,SACAO,UAAAnD,IAAA4C,WAAA9H,SAAAsC,QACAgG,SAAA9E,IAAAqE,SACAU,UAAA/E,IAAAqE,SAEAW,OAAA,GAEA/B,aAAAzG,KAAAqD,QAAA,gBACAoF,WAAAzI,KAAAqD,QAAA;YAEA,IAAAkE,UAAA,aAAAA,WAAAW,mBAAAE,SAKA,IAAAb,UAAA,YAAAA,WAAAY,iBAAAI,SAKA,IAAAhB,UAAA,WAAAA,WAAAY,iBAAAG,QAKA,IAAAf,UAAA,YAAAA,WAAAW,mBAAAG,SAUA,IAAAd,UAAA,YAAAA,WAAAW,mBAAAE,SAUA,IAAAb,UAAA,aAAAA,WAAAe,QAmBA,IAAAf,UAAA,aAAAA,WAAAgB,SAWA,IAAAhB,UAAA,YAAAA,UAAAe,QACAb,OAAApC,SAAArF,KAAAqC,OAAAqF;gBACAlE,GAAAkE,MAAAlE,IAAAiD,aAAA;gBAAAvB,GAAAwC,MAAAxC;;gBACA1B,GAAAkE,MAAAlE,IAAAiD,aAAA;gBAAAvB,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C;iBACAhC,OACAlD,KAAA0I,cAAA,GACApG,OAAAqG,UAAA,GACAH,OAAAd,MAAAlE,IAAAiD,aAAA,QACA,IAAAc,UAAA,YAAAA,UAAAgB,SACAd,OAAApC,SAAArF,KAAAqC,OAAAqF;gBACAlE,GAAAuE,UAAAvE;gBAAA0B,GAAAwC,MAAAxC;;gBACA1B,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C;iBACAhC,OACAlD,KAAA0I,cAAA,GACApG,OAAAqG,UAAA,GACAH,OAAAd,MAAAlE,IAAAiD,aAAA,QACA,IAAAc,UAAA,aAAAA,UAAAW,kBAAAG,SACAZ,OAAApC,SAAArF,KAAAqC,OAAAsF;gBACAnE,GAAAmE,OAAAnE;gBAAA0B,GAAAyC,OAAAzC,IAAAuB,aAAA;;gBACAjD,GAAAkE,MAAAlE,IAAAiD,aAAA;gBAAAvB,GAAAyC,OAAAzC,IAAAuB,aAAA;;gBACAjD,GAAAkE,MAAAlE,IAAAiD,aAAA;gBAAAvB,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C;iBACAhC,OACAlD,KAAA4I,eAAA,GACAtG,OAAAqG,UAAA,GACAH,OAAAb,OAAAnE,IAAAiD,aAAA,QACA,eAAAc,UAAAW,kBAAAG,SAAA;gBACA,IAAAQ,QAAAjB,KAAApE,IAAAiD,aAAA;gBACAwB,WAAAzE,IAAAoE,KAAApE,MACAqF,QAAAZ,WAAAzE,IAAAiD,aAAA,IAEAgB,OAAApC,SAAArF,KAAAqC,OAAAuF;oBACApE,GAAAqF;oBAAA3D,GAAA0C,KAAA1C;;oBACA1B,GAAAqF;oBAAA3D,GAAA6C,UAAA7C,IAAAuB,aAAA;;oBACAjD,GAAAuE,UAAAvE;oBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;oBACAjD,GAAAuE,UAAAvE;oBAAA0B,GAAA6C,UAAA7C;qBACAhC,OACAlD,KAAA8I,aAAA,GACAxG,OAAAqG,UAAA,GACAH,OAAAZ,KAAApE;mBACA,WAAA+D,WACAE,OAAApC,SAAArF,KAAAqC,OAAAuF;gBACApE,GAAAuE,UAAAvE,KAAAoE,KAAApE,IAAAuE,UAAAvE,KAAA;gBAAA0B,GAAA0C,KAAA1C;;gBACA1B,GAAAuE,UAAAvE,KAAAoE,KAAApE,IAAAuE,UAAAvE,KAAA;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C;iBACAhC,OACAlD,KAAA8I,aAAA,GACAxG,OAAAqG,UAAA,GACAH,OAAAZ,KAAApE,SA9DAiE,OAAApC,SAAArF,KAAAqC,OAAAsF;gBACAnE,GAAAmE,OAAAnE;gBAAA0B,GAAAyC,OAAAzC,IAAAuB,aAAA;;gBACAjD,GAAAmE,OAAAnE,KAAAmE,OAAAnE,IAAAuE,UAAAvE,KAAA;gBAAA0B,GAAAyC,OAAAzC,IAAAuB,aAAA;;gBACAjD,GAAAmE,OAAAnE,KAAAmE,OAAAnE,IAAAuE,UAAAvE,KAAA;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C;iBACAhC,OACAlD,KAAA4I,eAAA,GACAtG,OAAAqG,UAAA,GACAH,OAAAb,OAAAnE,KAAAmE,OAAAnE,IAAAuE,UAAAvE,KAAA,QA3BAiE,OADAzH,KAAA+I,WAAAV,UACAhD,SAAArF,KAAAqC,OAAAsF;gBACAnE,GAAAmE,OAAAnE;gBAAA0B,GAAAyC,OAAAzC,IAAAuB,aAAA;;gBACAjD,GAAAmE,OAAAnE,KAAAmE,OAAAnE,IAAAuE,UAAAvE,KAAA;gBAAA0B,GAAAyC,OAAAzC,IAAAuB,aAAA;;gBACAjD,GAAAmE,OAAAnE,KAAAmE,OAAAnE,IAAAuE,UAAAvE,KAAA;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C;iBACAhC,QAEAmC,SAAArF,KAAAqC,OAAAsF;gBACAnE,GAAAmE,OAAAnE;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C;iBACAhC,OAEAlD,KAAA4I,eAAA,GACAtG,OAAAqG,UAAA,GACAH,OAAAb,OAAAnE,KAAAmE,OAAAnE,IAAAuE,UAAAvE,KAAA,QA3BAiE,OAAApC,SAAArF,KAAAqC,OAAAqF;gBACAlE,GAAAkE,MAAAlE,IAAAiD,aAAA;gBAAAvB,GAAAwC,MAAAxC;;gBACA1B,GAAAkE,MAAAlE,IAAAiD,aAAA;gBAAAvB,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C;iBACAhC,OACAlD,KAAA0I,cAAA,GACApG,OAAAqG,UAAA,GACAH,OAAAd,MAAAlE,IAAAiD,aAAA,QAlBAgB,OAAApC,SAAArF,KAAAqC,OAAAqF;gBACAlE,GAAAkE,MAAAlE,IAAAiD,aAAA;gBAAAvB,GAAAwC,MAAAxC;;gBACA1B,GAAAkE,MAAAlE,IAAAiD,aAAA;gBAAAvB,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C,IAAAuB,aAAA;;gBACAjD,GAAAuE,UAAAvE;gBAAA0B,GAAA6C,UAAA7C;iBACAhC,OACAlD,KAAA0I,cAAA,GACApG,OAAAqG,UAAA,GACAH,OAAAd,MAAAlE,IAAAiD,aAAA,QAbAgB,OAAApC,SAAArF,KAAAqC,OAAAuF,MAAAI,aAAA9E;YACAlD,KAAA8I,aAAA,GACAxG,OAAA0G,YAAA,GACAR,OAAAR,YAAAxE,QARAiE,OAAApC,SAAArF,KAAAqC,OAAAqF,OAAAO,YAAA/E;YACAlD,KAAA0I,cAAA,GACApG,OAAAyG,WAAA,GACAP,OAAAP,WAAAzE,QARAiE,OAAApC,SAAArF,KAAAqC,OAAAsF,QAAAI,WAAA7E;YACAlD,KAAA4I,eAAA,GACAtG,OAAAqG,UAAA,GACAH,OAAAb,OAAAnE;YAyHA;YAJAxD,KAAA6C,UAAAP,OAAAQ,QAAA2E,QACAA,KAAAnE,KAAAtD,KAAA6C,UAAAP,OAAAQ,OAGA2E,MAAA;gBACA,SAAAwB,IAAA,GAAAC,OAAAlJ,KAAAqC,MAAA8G,MAAA5E,QAAA0E,IAAAC,MAAAD,KAOA,SALAjC,KADAoC,YAAApJ,KAAAqC,MAAA8G,MAAAF,IAGAI,QAAAD,UAAA9F,KAAA,SACAgG,QAAA7B,KAAAnE,KAAA,SAEAiG,KAAA,GAAAC,OAAAH,MAAA9E,SAAA,GAAAgF,KAAAC,MAAAD,MAAA;oBACA,IAAAE;oBACAA,QAAA7E,OAAA,KAAAyE,MAAAE,IAAA,IAAAF,MAAAE,IAAA,OACAE,QAAA7E,OAAA,KAAAyE,MAAAE,KAAA,OAAAF,MAAAE,KAAA;oBAOA,SALAG,eAAAD,QAAA,OACAE,eAAAF,QAAA,OACAG,aAAAH,QAAA,OACAI,aAAAJ,QAAA,OAEAK,KAAA,GAAAC,QAAAT,MAAA/E,SAAA,GAAAuF,KAAAC,OAAAD,MAAA;wBACA,IAAAE;wBACAA,YAAApF,OAAA,KAAA0E,MAAAQ,IAAA,IAAAR,MAAAQ,IAAA,OACAE,YAAApF,OAAA,KAAA0E,MAAAQ,KAAA,OAAAR,MAAAQ,KAAA;wBAEA,IAAAG,eAAAD,YAAA,OACAE,eAAAF,YAAA,OACAG,aAAAH,YAAA,OACAI,aAAAJ,YAAA,OAEAK,MAAA/E,sBAAAoE,cAAAC,cAAAC,YAAAC,YAAAI,cAAAC,cAAAC,YAAAC;wBACA,IAAAC,IAAAC,WAAAD,IAAAE,SAAA;4BAEA,IAAAC;4BACAN,iBAAAE,aACAH,eAAAE,cACAK,eAAA,KAAAH,IAAA7G,IAAA,IAAAiF,UAAAyB;4BACAZ,MAAAmB,OAAAX,KAAA,MAAAU,aACAA,eAAA,KAAAH,IAAA7G,IAAA,IAAAiF,UAAAyB,cAAAG,IAAA7G,GAAA0G,eAAA,IAAAzB,UAAA4B,IAAA7G,IAAA,IAAAiF,UAAAyB;4BACAZ,MAAAmB,OAAAX,KAAA,MAAAU,aACA/C,KAAAnE,KAAA,QAAAgG,WAEAkB,eAAA,KAAAH,IAAA7G,IAAA,IAAAiF,UAAAyB;4BACAZ,MAAAmB,OAAAX,KAAA,MAAAU,aACAA,eAAA,KAAAH,IAAA7G,IAAA,IAAAiF,UAAAyB,cAAAG,IAAA7G,GAAA0G,eAAA,IAAAzB,UAAA4B,IAAA7G,IAAA,IAAAiF,UAAAyB;4BACAZ,MAAAmB,OAAAX,KAAA,MAAAU,aACA/C,KAAAnE,KAAA,QAAAgG,UAGAY,eAAAE,cACAI,eAAA,KAAAP,cAAAI,IAAAnF,IAAA,IAAAuD;4BACAa,MAAAmB,OAAAX,KAAA,MAAAU,aACAA,eAAA,KAAAP,cAAAI,IAAAnF,IAAA,IAAAuD,UAAAwB,eAAA,IAAAxB,UAAA4B,IAAAnF,GAAA+E,cAAAI,IAAAnF,IAAA,IAAAuD;4BACAa,MAAAmB,OAAAX,KAAA,MAAAU,aACA/C,KAAAnE,KAAA,QAAAgG,WAEAkB,eAAA,KAAAP,cAAAI,IAAAnF,IAAA,IAAAuD;4BACAa,MAAAmB,OAAAX,KAAA,MAAAU,aACAA,eAAA,KAAAP,cAAAI,IAAAnF,IAAA,IAAAuD,UAAAwB,eAAA,IAAAxB,UAAA4B,IAAAnF,GAAA+E,cAAAI,IAAAnF,IAAA,IAAAuD;4BACAa,MAAAmB,OAAAX,KAAA,MAAAU,aACA/C,KAAAnE,KAAA,QAAAgG,SAIAQ,MAAA,GACA9C,OAAA;;;;gBAMAhH,KAAAqC,MAAA8G,MAAAvE,KAAA6C;;cAGAzH,KAAAqC,MAAAqI,gBAAA1K,KAAAqC,MAAAqI,gBAAAlC,OAAAxI,KAAAqC,MAAAqI,kBACA1K,KAAAqC,MAAAqI,eAAAlC;WAIA9I,OAAAD,UAAA2C;;;;;;IJoJM,SAAU1C,QAAQD;QK1lBxB,SAAAkL,SAAAtI,OAAAuI,UAAAC;YACA,IAAA9K,GAAAiH,KACA8D,OAAA;YACA,KAAA/K,IAAA,GAAAiH,MAAA,IAAA6D,OAAAtG,SAAA,GAAAxE,IAAAiH,KAAAjH,KAAA,GACA+K,QAAA,QAAA/K,IAAA,SAAAA,IAAA;YAEA,IAAAgL,eAAAH,SAAApH,GAAAoH,SAAA1F;YACA,KAAAnF,IAAA,GAAAiH,MAAA6D,OAAAtG,QAAAxE,IAAAiH,KAAAjH,KACAgL,WAAAnG,KAAAiG,OAAA9K,GAAAyD,IACAuH,WAAAnG,KAAAiG,OAAA9K,GAAAmF;YAEA,IAAA5C,SAAAD,MAAAG,MAAAsI,WAAAC;YACAzI,OAAAgB,KAAA,UAAAjB,MAAApB,QAAA,mBACAqB,OAAAgB,KAAA,gBAAAjB,MAAApB,QAAA;YAEA,IAAA0C,OAAAtB,MAAApB,QAAA0C,MACAC,QAAAvB,MAAApB,QAAA,gBACA4C,QAAAxB,MAAApB,QAAA;YAMA,OAJA0C,QAAArB,OAAAgB;gBAAAK;gBACAC,SAAAtB,OAAAgB;gBAAAQ,eAAAF;gBACAC,SAAAvB,OAAAgB;gBAAAS,eAAAF;gBAEAvB;;QAGA,SAAA+C,SAAAhD,OAAA2I,MAAAC,IAAA/H;YACA,IAAAnD,GAAAiH;YAEA,qBAAAxF,OAAAE,UAAAwJ,SAAA1K,KAAAyK,QACAA;YAGA,IAAAH,OAAA;YACA,KAAA/K,IAAA,GAAAiH,MAAA,IAAAiE,GAAA1G,SAAA,GAAAxE,IAAAiH,KAAAjH,KAAA,GACA+K,QAAA,QAAA/K,IAAA,SAAAA,IAAA;YAEA,IAAAgL,eAAAC,KAAAxH,GAAAwH,KAAA9F;YACA,KAAAnF,IAAA,GAAAiH,MAAAiE,GAAA1G,QAAAxE,IAAAiH,KAAAjH,KACAgL,WAAAnG,KAAAqG,GAAAlL,GAAAyD,IACAuH,WAAAnG,KAAAqG,GAAAlL,GAAAmF;YAGA,IAAAuC,OAAApF,MAAAG,MAAAsI,WAAAC;YACAtD,KAAAnE;gBACAwB,QAAAzC,MAAApB,QAAA;gBACA8D,gBAAA1C,MAAApB,QAAA;gBACAkK,aAAA9I,MAAApB,QAAA;;YAGA,IAAA0C,OAAAtB,MAAApB,QAAA0C,MACAC,QAAAvB,MAAApB,QAAA,gBACA4C,QAAAxB,MAAApB,QAAA;YAMA,IAJA0C,QAAA8D,KAAAnE;gBAAAK;gBACAC,SAAA6D,KAAAnE;gBAAAQ,eAAAF;gBACAC,SAAA4D,KAAAnE;gBAAAS,eAAAF;gBAEAX,MAAA;gBAEA,IAAAkI,cAAA,GAEAC,WAAAhJ,MAAAG,MAAAU,KAAA,MAAAA,OAEAoI,gBAAA,GACAC,UAAAN,GAAA;gBAEAD,KAAA9F,MAAAqG,QAAArG,MACAoG,gBAAA;gBAGA,IAAA9H,IAAA,GACA0B,IAAA;gBAEAkG,cAEA5H,IADAwH,KAAAxH,IAAA+H,QAAA/H,IACAwH,KAAAxH,KAAAwH,KAAAxH,IAAA+H,QAAA/H,KAAA,IAEA+H,QAAA/H,KAAA+H,QAAA/H,IAAAwH,KAAAxH,KAAA;gBAIA0B,IADA8F,KAAA9F,IAAAqG,QAAArG,IACA8F,KAAA9F,KAAA8F,KAAA9F,IAAAqG,QAAArG,KAAA,IAEAqG,QAAArG,KAAAqG,QAAArG,IAAA8F,KAAA9F,KAAA;gBAGAoG,gBACA9H,KAAA6H,SAAA5G,UAAAC,QAAA,GACAQ,KAAA7C,MAAApB,QAAA,mBAEAuC,KAAAnB,MAAApB,QAAA;gBACAiE,KAAAmG,SAAA5G,UAAAO,SAAA,OAGAxB,IAAAwH,KAAAxH,GACA0B,IAAA8F,KAAA9F,GAEAoG,gBACA9H,KAAAnB,MAAApB,QAAA;gBACAiE,KAAA7C,MAAApB,QAAA,mBAEAuC,KAAAnB,MAAApB,QAAA,oBACAiE,KAAA7C,MAAApB,QAAA;gBAIAoK,SAAA/H;oBACAC,eAAA;oBACAG,aAAArB,MAAApB,QAAA;oBACAwC,MAAApB,MAAApB,QAAA;oBACAuC;oBACA0B;oBAGAvB,QAAA0H,SAAA/H;oBAAAK;oBACAC,SAAAyH,SAAA/H;oBAAAQ,eAAAF;oBACAC,SAAAwH,SAAA/H;oBAAAS,eAAAF;;;YAGA,OAAA4D;;QAGA,SAAAnC,sBAAAkG,aAAAC,aAAAC,WAAAC,WAAAC,aAAAC,aAAAC,WAAAC;;YAEA,IAAAC,aAAAlM,GAAAmM,GAAAC,YAAAC,YAAAC;gBACA5I,GAAA;gBACA0B,GAAA;gBACAoF,UAAA;gBACAC,UAAA;;;;;;;;;;YAGA,OADAyB,eAAAD,YAAAF,gBAAAH,YAAAF,gBAAAM,YAAAF,gBAAAD,YAAAF;YACA,MAAAO,cACAI,UAEAtM,IAAA2L,cAAAI,aACAI,IAAAT,cAAAI;YACAM,cAAAJ,YAAAF,eAAA9L,KAAAiM,YAAAF,eAAAI,GACAE,cAAAT,YAAAF,eAAA1L,KAAA6L,YAAAF,eAAAQ;YACAnM,IAAAoM,aAAAF,aACAC,IAAAE,aAAAH,aAGAI,OAAA5I,IAAAgI,cAAA1L,KAAA4L,YAAAF;YACAY,OAAAlH,IAAAuG,cAAA3L,KAAA6L,YAAAF,cAOA3L,IAAA,KAAAA,IAAA,MACAsM,OAAA9B,WAAA;YAGA2B,IAAA,KAAAA,IAAA,MACAG,OAAA7B,WAAA,IAGA6B;;QAGA1M,OAAAD;YACAkL;YACAtF;YACAC;;;;;;;ILqmBM,SAAU5F,QAAQD,SAASU;QMlwBjC,SAAAS,MAAAyL;YAsHA,SAAAC,SAAAC;gBACA,IAAAC,aAAAD,EAAA/E,QAAA,UACAiF,WAAAF,EAAA/E,QAAA;gBACA,OAAAgF,cAAA,KAAAC,YAAA,IACAF,EAAA5H,UAAA6H,YAAAC,YAEA;;YAGA,SAAAC,aAAAH;gBACA,IAAAC,aAAAD,EAAA/E,QAAA,UACAiF,WAAAF,EAAA/E,QAAA;gBACA,OAAAgF,cAAA,KAAAC,YAAA,IACAF,EAAA5H,UAAA6H,YAAAC,YAEA;;YAGA,SAAAE,UAAAJ;gBACA,IAAAC,aAAAD,EAAA/E,QAAA,UACAiF,WAAAF,EAAA/E,QAAA;gBACA,OAAAgF,cAAA,KAAAC,YAAA,IACApK,MAAAsD,QAAA4G,EAAA5H,UAAA,GAAA6H,aAAA,MAEAnK,MAAAsD,QAAA4G;;YAGA,SAAAK,YAAAL;gBACA,IAAAvJ,OAAA,QACAwJ,aAAAD,EAAA/E,QAAA,UACAiF,WAAAF,EAAA/E,QAAA;gBASA,OARAgF,cAAA,KAAAC,YAAA,MACAzJ,OAAA6J,SAAAlI,UAAA6H,YAAAC;gBACAzJ,KAAAwE,QAAA,YACA,UAAAxE,QAAA,SAAAA,SACAA,OAAA,WAAAA;gBAIAA;;YA5JAqJ,iBAAA,IACAA,cAAAS;YA4FA,SA1FAzK;gBACAsD;gBACAoH,OAAA;gBACAC,SAAA,SAAAC,WAAAhM;oBAWA,SAAAiM,iBAAAX;wBACA,IAAAY,YAAAZ,EAAAzJ,MACA,OAAAqK,YAAAZ,EAAAzJ;wBAGA,QAAAyJ,EAAA5J;0BACA;4BACAwK,YAAAZ,EAAAzJ,OAAA,IAAAsK,MAAAC,SAAAd;4BACA;;0BACA;4BACAY,YAAAZ,EAAAzJ,OAAA,IAAAwK,IAAAD,SAAAd;4BACA;;0BACA;4BACAY,YAAAZ,EAAAzJ,OAAA,IAAAyK,UAAAF,SAAAd;4BACA;;0BACA;4BACAY,YAAAZ,EAAAzJ,OAAA,IAAA0K,YAAAH,SAAAd;4BACA;;0BACA;4BACAY,YAAAZ,EAAAzJ,OAAA,IAAA2K,WAAAJ,SAAAd;4BACA;;0BACA;4BACAY,YAAAZ,EAAAzJ,OAAA,IAAA4K,UAAAL,SAAAd;4BACA;;0BACA;4BACA,WAAAoB,MAAA;;wBAGA,OAAAR,YAAAZ,EAAAzJ;;oBAtCA,IAAA8D,OAAA5G;oBAEAA,KAAAqN,WACArN,KAAAqN,QAAAO;oBAGA,IAAAP,UAAA,IAAAxM,UAAAoM,WAAAhM;oBACAjB,KAAAqN;oBACA,IAAAF;qBAiCA,SAAAU,eAAAtB,GAAAuB,UAAAC;wBACA,IAAAC,WAAAd,iBAAAX;wBAiBA,OAfA3F,KAAAmG,UAAAR,IACAc,QAAAY,UAAAD,YACAF,YAAAC,SAAAD,SAAAI,WACAJ,oBAAA,aACAC,KAAAI,QAAA5B,KACAuB,SAAAK,IAAAH;wBAEAD,KAAAK,OAAA7B,KACAuB,SAAAM,GAAAJ,aAGAF,SAAAO,KAAAL,YAIAA,SAAAE,SACAF,YAGAA,oBAAA,aACAzB,EAAA4B,OACAN,eAAAtB,EAAA4B,KAAAH,UAAAzB;wBAEAA,EAAA6B,MACAP,eAAAtB,EAAA6B,IAAAJ,UAAAzB,MAEAA,EAAAvJ,QACA6K,eAAAtB,EAAAvJ,MAAAgL,UAAAzB;wBAGAyB;sBACAhO,KAAA+M,QAEAM,QAAA7G;;gBAEAoH,OAAA;oBACA5N,KAAAqN,QAAAO;;eAIAzE,YACAmF,YAAA,GACAC,KAAA,GAAAC,QAAAnC,MAAA9H,QAAAgK,KAAAC,OAAAD,MACA,aAAAlC,MAAAkC,OAAA,SAAAlC,MAAAkC,KAAA;gBACA,IAAAE,QAAApC,MAAA1H,UAAA2J,WAAAC;gBACAD,YAAAC,KAAA,GACApF,MAAAvE,KAAA6J,MAAAC,QAAA;;YAIAJ,YAAAjC,MAAA9H,UACA4E,MAAAvE,KAAAyH,MAAAsC,OAAAL;YAGA,SAAArF,IAAA,GAAAjC,MAAAmC,MAAA5E,QAAA0E,IAAAjC,OAAA;gBACA,IAAA4H,cAAAzF,MAAAF;gBAEA2F,YAAApH,QAAA,aAAAoH,YAAApH,QAAA,aAAAoH,YAAApH,QAAA,aACA2B,MAAAF,IAAA,aAAA2F;gBACAzF,MAAAsB,OAAAxB,GAAA,IACAjC,SAEAiC;;YA8CA,MAAAE,MAAA5E,SAAA;gBACA,IAAAkD,OAAA0B,MAAAsB,OAAA,SAAAqC;gBAEA,IAAArF,KAAAD,QAAA;;oBAEA,IAAAqH,QAAApH,KAAArD,MAAA,OACA9B;wBACAQ,KAAA+L,MAAA,GAAAH,QAAA;wBACA/L,YAAAkM,MAAA;wBACA3L,MAAA;wBACAc,MAAA;wBACAC,QAAA;wBACArB,WAAA;wBACAC;wBACAiM;uBAIAA,SAAAD,MAAA,GAAAE,MAAA;oBACA,IAAAD,iBAAAvK,SAAA,GAEA,SADAyK,UAAAF,OAAA,GAAA1K,MAAA,MACArE,IAAA,GAAAA,IAAAiP,QAAAzK,QAAAxE,KAAA;wBACA,IAAAkP,QAAAD,QAAA,GAAA5K,MAAA;wBACA,KAAA6K,MAAA1K,WACAjC,OAAAwM,OAAAG,MAAA,MAAAA,MAAA;;oBAKA,IAAAC;;oBAuBA,IArBA5M,OAAAK,WAAA6E,QAAA,eACA0H,MAAA5M,OAAAK,WAAAyB,MAAA;oBACA9B,OAAAK,aAAAuM,IAAArI,SACAvE,OAAAY,OAAAgM,IAAAC,KAAA,QAGA7M,OAAAY,QAAAZ,OAAAY,KAAAsE,QAAA,cACA0H,MAAA5M,OAAAY,KAAAkB,MAAA;oBACA9B,OAAAY,OAAAgM,IAAArI,SACAvE,OAAA0B,OAAAkL,IAAAC,KAAA,SACA7M,OAAAK,WAAA6E,QAAA,eACA0H,MAAA5M,OAAAK,WAAAyB,MAAA;oBACA9B,OAAAK,aAAAuM,IAAArI,SACAvE,OAAA0B,OAAAkL,IAAAC,KAAA,QAGA7M,OAAAK,WAAA6E,QAAA,eACAlF,OAAAK,aAAAL,OAAAK,WAAAyB,MAAA;oBAIA9B,OAAA0B,MAAA;wBACA,IAAAwI,aAAAlK,OAAA0B,KAAAwD,QAAA,UACAiF,WAAAnK,OAAA0B,KAAAwD,QAAA;wBACAgF,cAAA,KAAAC,YAAA,MACAnK,OAAA2B,SAAA3B,OAAA0B,KAAAW,UAAA6H,YAAAC;wBACAnK,OAAA0B,OAAA1B,OAAA0B,KAAAW,UAAA,GAAA6H,aAAA;;;;oBAMA,IAAAlK,OAAAY,QACAZ,OAAAY,KAAAsE,QAAA;wBACA,IAAA4H,cAAA9M,OAAAY,KAAAkB,MAAA;wBACA9B,OAAAM,YAAAwM,YAAAC,MAAAvC,QACAxK,OAAAY,OAAAkM,YAAAD,KAAA;;;oBAKA9M,MAAAsD,QAAArD,OAAAQ,OAAAR;uBAEA,IAAAmF,KAAAD,QAAA,YAGA,SADA8H,cAAA7H,KAAArD,MAAA,OACArE,IAAA,GAAAwP,OAAAD,YAAA/K,QAAAxE,IAAAwP,MAAAxP,KAAA;oBACA,IAAA8M,WAAAyC,YAAAvP,IACAyP,UAAA9C,aAAAG;oBAEA,WAAA2C,WAAA,YAAAA;oBAEA3C,oBAAA6B,QAAA,gBACA7B,oBAAA6B,QAAA;oBAGA,IAAAe,WAAA9C,UAAAE,WACA7J,OAAA4J,YAAAC,WAEA6C,YAAA;oBACA,IAAA1M,KAAAwE,QAAA;wBACA,IAAAmI,UAAA3M,KAAAoB,MAAA;wBACApB,OAAA2M,QAAA,IACAD,YAAAC,QAAA,GAAA7C;;oBAOA,IAJAzK,MAAA0K,UACA1K,MAAA0K,QAAA0C,WAGA1P,IAAA,IAAAwP,MAAA;wBACA,IAAAK,WAAAN,YAAAvP,IAAA;wBACA0P,SAAAzM,QAAA2J,UAAAiD,WACAH,SAAA,eAAAzM,QAAA0M;wBACAA,YAAA;;uBAGA,IAAAjI,KAAAD,QAAA,YAIA,SADAqI,mBAAApI,KAAArD,MAAA,OACArE,IAAA,GAAAwP,OAAAM,iBAAAtL,QAAAxE,IAAAwP,MAAAxP,KAEA,IAAAA,IAAA,KAAAwP,MAAA;oBACA,IAAAO,UAAAnD,UAAAkD,iBAAA9P,KACA6P,WAAAjD,UAAAkD,iBAAA9P,IAAA;oBAEA+P,QAAA,UAAAF,SAAA9M,OAAAiN,KAAAnP,MAAA0L,SAAAuD,iBAAA9P,IAAA;;;YAMA,OAAAsC;;QApSA,IAAAxB,YAAAV,6CAAA,IACAiN,QAAAjN,oDAAA,KACAmN,MAAAnN,kDAAA,IACAoN,YAAApN,wDAAA,KACAqN,cAAArN,0DAAA,KACAsN,aAAAtN,yDAAA,KACAuN,YAAAvN,wDAAA;QAiSAT,OAAAD,UAAAmB;;;;;;INoxBM,SAAUlB,QAAQD,SAASU;QOtjCjC,SAAAuN,UAAArL,OAAApB;YACAA,yBACAmB,OAAA5B,KAAAR,MAAAqC,OAAApB,UACAjB,KAAAgQ,aAAAhQ,KAAAqD,QAAA;YACArD,KAAAiQ,gBAAA,UACAjQ,KAAAkQ,eAAA,SACAlQ,KAAA8O,SAAA7N,QAAA6N;YACA7N,QAAAkN,OAAAlN,QAAAkP,iBAAAlP,QAAAmN,OAAAnN,QAAAmP,eACA,YAAAnP,QAAAkP,iBACAnQ,KAAAkQ,eAAA;YACAlQ,KAAAiQ,gBAAA,YAEAjQ,KAAAkQ,eAAA,SACAlQ,KAAAiQ,gBAAA,YAEAhP,QAAAkN,QAAAlN,QAAAkP,iBAAAlP,QAAAmN,MAAAnN,QAAAmP,eACA,YAAAnP,QAAAmP,gBACApQ,KAAAiQ,gBAAA;YACAjQ,KAAAkQ,eAAA,YAEAlQ,KAAAiQ,gBAAA,SACAjQ,KAAAkQ,eAAA,aAGAlQ,KAAAiQ,gBAAA;YACAjQ,KAAAkQ,eAAA,UAGAlQ,KAAAiQ,gBAAAjQ,KAAAiQ,iBAAA;YACAjQ,KAAAkQ,eAAAlQ,KAAAkQ,gBAAA,SAEAlQ,KAAAkD,KAAAI;gBACAE,GAAA,IAAAxD,KAAAgQ;;YAGA,IAAAtL,QAAA1E,KAAAkD,KAAAuB,UAAAC,QAAA,IAAA1E,KAAAgQ;YACAtL,iBAAA;YACA,IAAAM,SAAAhF,KAAAkD,KAAAuB,UAAAO,SAAA,IAAAhF,KAAAgQ;YACAhL,mBAAA,GACAA,SAAAkC,KAAAmJ,IAAA,KAAA3L,OAAAM;YACA,IAAAsL,SAAA5L,QAAA,GACA6L,SAAAvL,SAAA;YAEAhF,KAAAkD,KAAAI;gBACAE,GAAA8M,SAAAtQ,KAAAgQ,aAAA;;YAGA,IAAAjD;gBAAAvJ,GAAA8M;gBAAApL,GAAAqL;eACA1F;gBACArH,GAAA8M,SAAA5L,QAAA;gBAAAQ,GAAAqL,SAAAvL,SAAA;;gBACAxB,GAAA8M,SAAA5L,QAAA,IAAAA,QAAA;gBAAAQ,GAAAqL,SAAAvL,SAAA,IAAAA,SAAA;;gBACAxB,GAAA8M,SAAA5L,QAAA,IAAAA;gBAAAQ,GAAAqL,SAAAvL,SAAA;;gBACAxB,GAAA8M,SAAA5L,QAAA,IAAAA,QAAA;gBAAAQ,GAAAqL,SAAAvL,SAAA,IAAAA,SAAA;;gBACAxB,GAAA8M,SAAA5L,QAAA;gBAAAQ,GAAAqL,SAAAvL,SAAA;iBAGA1C,SAAAqI,SAAAtI,OAAA0K,OAAAlC;YAEAvI,OAAAgB;gBACAwB,QAAA9E,KAAAqD,QAAA;gBACA0B,gBAAA/E,KAAAqD,QAAA;gBACAI,MAAAzD,KAAAqD,QAAA;gBAEApC,QAAA+C,QAAA1B,OAAAgB,KAAA,QAAArC,QAAA+C,OACA/C,QAAAgD,UAAA3B,OAAAgB,KAAA,UAAArC,QAAAgD;YACAhD,QAAA6B,QAAAR,OAAAa,KAAA7C,KAAAW,QAAA6B,MACAR,OAAAa,KAAAC,aAAA,SAAApD,KAAAqD,QAAA;YAEArD,KAAAkD,KAAAI;gBACA4B,GAAA5C,OAAAmC,UAAAO,SAAA;gBAGAhF,KAAAuC,MAAAqC,KAAAtC,SACAA,OAAA2C,aAAAjF,KAAAkD,OAEAlD,KAAAmF;;QAhFA,IAAA/C,SAAAjC,8CAAA,IACAgC,WAAAhC,+CAAA,GAAAgC,UACAiD,UAAAjF,iDAAA,IACAwK,WAAAvF,QAAAuF;QA+EAxI,SAAAuL,WAAAtL,SAEAsL,UAAAhM,UAAA8E,SAAA;YAEAxG,KAAAiQ,kBACAjQ,UAAAiQ,gBAAA,aAAAjQ,KAAAwQ;YAGAxQ,KAAAkQ,iBACAlQ,UAAAkQ,eAAA,aAAAlQ,KAAAyQ;YAGA,IAAAhK,aAAAzG,KAAAqD,QAAA;YAEA,IAAArD,KAAA0Q,eAAA;gBACA,IAAAtJ,cAAApH,KAAAqG;gBAEArG,KAAA0Q,cAAA/J,iBACA3G,KAAA0Q,cAAAxK,OAAAlG,KAAA+F,SAAA/F,KAAAgF,SAAAyB;gBACAzG,KAAA0Q,cAAAzK,KAAAmB,YAAA5D,IAAAxD,KAAA0Q,cAAAhM,QAAA,IACA1E,KAAA0Q,cAAA/J,gBAAA;gBAEA3G,KAAA0Q,cAAAlK;;YAIA,IAAAxG,KAAA2Q,cAAA;gBACA,IAAAjK,aAAA1G,KAAAuG;gBAEA,KAAAvG,KAAA2Q,aAAAhK,cAAA;oBAEA3G,KAAA2Q,aAAAxK,KAAAO,WAAAxB,IAAAlF,KAAA2Q,aAAA3L,SAAA,IACAhF,KAAA2Q,aAAA3K,OAAAhG,KAAAuC,MAAAkC,UAAAjB,IAAAxD,KAAA0E,QAAA+B;oBAEA,IAAAG,OAAA5G;qBACA,SAAA6G;wBAGA,SADAC,MADAC,kBAAA,GAEAhH,IAAA,GAAAiH,MAAAJ,KAAAvE,MAAAsD,QAAApB,QAAAxE,IAAAiH,KAAAjH,KAGA,IAFA+G,OAAAF,KAAAvE,MAAAsD,QAAA5F;yBAEA6G,KAAAkI,OAAA,0BAAAlI,KAAAkI,OAAA;4BACA,IAAA7H,OAAAC,KAAAC,IAAAL,KAAAjB,YAAArC,IAAAoD,KAAA+J,aAAA9K,YAAArC;4BACA,IAAAsD,KAAAjB,YAAAX,IAAA0B,KAAA+J,aAAA9K,YAAAX,KAAA+B,QAAAL,KAAA+J,aAAAjM,QAAA;gCACAqC,kBAAA;gCACA;;;wBAKAA,mBACAH,KAAA+J,aAAA1K,KAAAa,KAAAhB,SAAAgB,KAAApC,QAAA+B;wBACAI;yBAIA7G,KAAA2Q,aAAAhK,gBAAA,GAEA3G,KAAA2Q,aAAAnK;;;WAKAkH,UAAAhM,UAAA2F,cAAA;YACArH,KAAAwQ,cACAxQ,KAAAsH,WAAAtH,KAAAwQ,YAAAxQ,KAAAqD,QAAA,aAAArD,KAAAiQ;YAGAjQ,KAAAyQ,aACAzQ,KAAAsH,WAAAtH,KAAAyQ,WAAAzQ,KAAAqD,QAAA,YAAArD,KAAAkQ;WAIAxQ,OAAAD,UAAAiO;;;;;;IPqkCM,SAAUhO,QAAQD,SAASU;QQ3tCjC,SAAAU,UAAAoM,WAAAhM;YACAA,yBAEAjB,KAAAwC,QAAA,IAAAoO,QAAA3D,YAEAjN,KAAAiB,UAAAiB,SAAAjB,SAAAC;YAEAlB,KAAA2F,cACA3F,KAAAmJ,YACAnJ,KAAA+M,QAAA;;QAdA,IAAA6D,UAAAzQ,mCAAA,KACA+B,WAAA/B,+CAAA,GAAA+B,UACAhB,iBAAAf,gDAAA,IACAuN,YAAAvN,wDAAA;QAcAU,UAAAa,UAAAmP,SAAA,SAAAvO;YACAtC,KAAA2F,QAAA6B,QAAAlF,YAAA,KACAtC,KAAA2F,QAAAf,KAAAtC;YAGA,IAAAwO,YAAA9Q;YAyBA,OAvBAsC,kBAAA,aACAA,OAAA6L,MAAA,SAAA4C;gBAKA,OAJAzO,OAAAkO,aAAAO,YACAzO,OAAAmO,cACAnO,OAAA4L,UAAA;gBAEA4C,UAAAD,OAAAE;eAEAzO,OAAA8L,KAAA,SAAA2C;gBAKA,OAJAzO,OAAAmO,YAAAM,YACAzO,OAAAkO,eACAlO,OAAA4L,UAAA;gBAEA4C,UAAAD,OAAAE;iBAGAzO,OAAA+L,OAAA,SAAA0C;gBAGA,OAFAzO,OAAAU,OAAA+N,YACAzO,OAAA4L,UAAA,GACA4C,UAAAD,OAAAE;eAIAzO;WAGAzB,UAAAa,UAAAuM,YAAA,SAAA3L;YAEA,OADAtC,KAAA+M,QAAAzK,QACAtC,KAAA6Q,OAAAvO;WAGAzB,UAAAa,UAAA8E,SAAA;YACA,IAQAlE,QACAmF,MATAvD,WAAA,GACA8M,YAAA,GACAjR,IAAA,GACAiH,MAAA,GACAwB,OAAA,GACAyI,OAAA,GACAC,OAAA,GACAC,OAAA;YAIA,KAAApR,IAAA,GAAAiH,MAAAhH,KAAA2F,QAAApB,QAAAxE,IAAAiH,KAAAjH,KACAuC,SAAAtC,KAAA2F,QAAA5F,IACAuC,OAAAoC,QAAAR,aACAA,WAAA5B,OAAAoC;YAEApC,OAAA0C,SAAAgM,cACAA,YAAA1O,OAAA0C;YAIA,KAAAjF,IAAA,GAAAiH,MAAAhH,KAAA2F,QAAApB,QAAAxE,IAAAiH,KAAAjH,KACAuC,SAAAtC,KAAA2F,QAAA5F,IACAuC,OAAA0D,OAAAhG,KAAAiB,QAAAuC,KAAAU,WAAA5B,OAAAoC,SAAA,IAAA1E,KAAAiB,QAAA;YACAqB,OAAA4D,OAAAlG,KAAAiB,QAAAiE,KAAA8L,YAAA1O,OAAA0C,UAAA,IAAAhF,KAAAiB,QAAA;;;;;YASA,KANAjB,KAAA+M,MAAAvG,UAMAzG,IAAA,GAAAiH,MAAAhH,KAAA2F,QAAApB,QAAAxE,IAAAiH,KAAAjH,KACAuC,SAAAtC,KAAA2F,QAAA5F;YACAuC,OAAA+E;YAGAmB,OAAAxI,KAAA0K;YAEA,IAAAlH,GACA0B;YAEA,KAAAnF,IAAA,GAAAiH,MAAAhH,KAAA2F,QAAApB,QAAAxE,IAAAiH,KAAAjH,KACAuC,SAAAtC,KAAA2F,QAAA5F,IACAyD,IAAAlB,OAAAwD,SAAAxD,OAAAoC;YACAQ,IAAA5C,OAAAyD,SAAAzD,OAAA0C,QACAxB,IAAAgF,SACAA,OAAAhF,IAEA0B,IAAA+L,SACAA,OAAA/L;YAIA,KAAAnF,IAAA,GAAAiH,MAAAhH,KAAAmJ,MAAA5E,QAAAxE,IAAAiH,KAAAjH,KAAA;gBACA0H,OAAAzH,KAAAmJ,MAAApJ,GAAA0E,WACAjB,IAAAiE,KAAAjE,GACA0B,IAAAuC,KAAAvC;gBACA,IAAAkM,KAAA3J,KAAA2J,IACAC,KAAA5J,KAAA4J;gBACA7N,IAAA0N,SACAA,OAAA1N,IAEA0B,IAAAiM,SACAA,OAAAjM,IAEAkM,KAAA5I,SACAA,OAAA4I,KAEAC,KAAAJ,SACAA,OAAAI;;YAIA,IAAAC,QAAAtR,KAAAiB,QAAA,OACAsQ,YAAAvR,KAAAiB,QAAA;YAEAiQ,OAAA,MAAAA,QAAAK,YACAJ,OAAA,MAAAA,QAAAI;YAEA,IAAA7M,QAAA8D,OAAA+I,YAAAL,MACAlM,SAAAiM,OAAAM,YAAAJ;YAEAnR,KAAAwC,MAAAgP,QAAA9M,QAAA4M,OAAAtM,SAAAsM,QACAtR,KAAAwC,MAAAiP,WAAAP,MAAAC,MAAAzM,OAAAM,SAAA;WAGAnE,UAAAa,UAAAkM,QAAA;YACA,IAAA5N,KAAAwC,OAAA;gBACA,IAAAkP,WAAA1R,KAAAwC,MAAAmP;gBACAD,SAAAE,WAAAC,YAAAH;;WAIAhS,OAAAD,UAAAoB;;;;;;IR0uCM,SAAUnB,QAAQD;;QSh4CxBC,OAAAD;YACA+D,GAAA;YACA0B,GAAA;YACA4M,cAAA;YACAC,eAAA;YACAC,eAAA;YACAtO,aAAA;YACAuO,cAAA;;;;YAIAC,cAAA;YACAC,iBAAA;YACA1O,MAAA;YACA2O,YAAA;YACAC,WAAA;YACAlH,aAAA;YACAmH,OAAA;YACAhB,OAAA;YACA3L;gBACAoH;gBACAwF;gBACAC;gBACAC;gBACAC;gBACAC;;;;;;;;ITm5CM,SAAUjT,QAAQD;;QU56CxBmT,MAAAlR,UAAA8F,YACAoL,MAAAlR,UAAA8F,UAAA,SAAAqL;YACA;YACA,aAAA7S,MACA,UAAA8S;YAEA,IAAAC,IAAAvR,OAAAxB,OACAgH,MAAA+L,EAAAxO,WAAA;YACA,UAAAyC,KACA;YAEA,IAAAgM,IAAA;YASA,IARAC,UAAA1O,SAAA,MACAyO,IAAAE,OAAAD,UAAA,KACAD;YACAA,IAAA,IACA,MAAAA,UAAAG,SAAAH,OAAAG,WACAH,SAAA,WAAA9L,KAAAkM,MAAAlM,KAAAC,IAAA6L;YAGAA,KAAAhM,KACA;YAGA,KADA,IAAAqM,IAAAL,KAAA,IAAAA,IAAA9L,KAAAmJ,IAAArJ,MAAAE,KAAAC,IAAA6L,IAAA,IACAK,IAAArM,KAAAqM,KACA,IAAAA,KAAAN,OAAAM,OAAAR,eACA,OAAAQ;YAGA;;QAKAT,MAAAlR,UAAA4R,gBACAV,MAAAlR,UAAA4R,cAAA,SAAAT;YACA;YACA,aAAA7S,MACA,UAAA8S;YAEA,IAAAC,IAAAvR,OAAAxB,OACAgH,MAAA+L,EAAAxO,WAAA;YACA,UAAAyC,KACA;YAEA,IAAAgM,IAAAhM;YACAiM,UAAA1O,SAAA,MACAyO,IAAAE,OAAAD,UAAA,KACAD,SACAA,IAAA,IACA,MAAAA,UAAA,SAAAA,OAAA,WACAA,SAAA,WAAA9L,KAAAkM,MAAAlM,KAAAC,IAAA6L;YAIA,KADA,IAAAK,IAAAL,KAAA,IAAA9L,KAAAqM,IAAAP,GAAAhM,MAAA,KAAAA,MAAAE,KAAAC,IAAA6L,IACAK,KAAA,GAAAA,KACA,IAAAA,KAAAN,OAAAM,OAAAR,eACA,OAAAQ;YAGA;YAIAG,OAAA9R,UAAAoL,SACA0G,OAAA9R,UAAAoL,OAAA;YACA,OAAA9M,KAAA0O,QAAA;;;;;;;IVw7CM,SAAUhP,QAAQD,SAASU;QWx/CjC,SAAAmN,IAAAjL,OAAApB;YACA,IAAAqB,SAAAD,MAAAG,MAAAiR,KAAA;YACAxS,yBACAA,QAAAiC,OAAAjC,QAAAiC,QAAA,OACAd,OAAA5B,KAAAR,MAAAqC,OAAApB,SAAAqB;;QAPA,IAAAF,SAAAjC,8CAAA,IACAgC,WAAAhC,+CAAA,GAAAgC;QAQAA,SAAAmL,KAAAlL,SAEA1C,OAAAD,UAAA6N;;;;;;IXqgDM,SAAU5N,QAAQD,SAASU;QY3gDjC,SAAAqN,YAAAnL,OAAApB;YACAA,yBACAmB,OAAA5B,KAAAR,MAAAqC,OAAApB,UACAjB,KAAAgQ,aAAAhQ,KAAAqD,QAAA;YAEArD,KAAAkD,KAAAI;gBACAE,GAAA,IAAAxD,KAAAgQ;;YAGA,IAAAtL,QAAA1E,KAAAkD,KAAAuB,UAAAC,QAAA,IAAA1E,KAAAgQ,YACAhL,SAAAhF,KAAAkD,KAAAuB,UAAAO,SAAA,IAAAhF,KAAAgQ,YACAM,SAAAtQ,KAAAgQ,YACAO,SAAAvL,SAAA,GAEA+H;gBAAAvJ,GAAA8M;gBAAApL,GAAAqL;eACA1F;gBACArH,GAAA8M,SAAAtQ,KAAAgQ;gBAAA9K,GAAAF;;gBACAxB,GAAA8M,SAAAtQ,KAAAgQ,aAAAtL;gBAAAQ,GAAAF;;gBACAxB,GAAA8M,SAAAtQ,KAAAgQ,aAAAtL,QAAA,IAAA1E,KAAAgQ;gBAAA9K,GAAA;;gBACA1B,GAAA8M,SAAAtQ,KAAAgQ,aAAA,IAAAhQ,KAAAgQ;gBAAA9K,GAAA;;gBACA1B,GAAA8M;gBAAApL,GAAAqL;iBAGAjO,SAAAqI,SAAAtI,OAAA0K,OAAAlC;YAEAvI,OAAAgB;gBACAwB,QAAA9E,KAAAqD,QAAA;gBACA0B,gBAAA/E,KAAAqD,QAAA;gBACAI,MAAAzD,KAAAqD,QAAA;gBAEApC,QAAA+C,QAAA1B,OAAAgB,KAAA,QAAArC,QAAA+C,OACA/C,QAAAgD,UAAA3B,OAAAgB,KAAA,UAAArC,QAAAgD;YACAhD,QAAA6B,QAAAR,OAAAa,KAAA7C,KAAAW,QAAA6B,MACAR,OAAAa,KAAAC,aAAA,SAAApD,KAAAqD,QAAA;YAEArD,KAAAkD,KAAAI;gBACA4B,GAAA5C,OAAAmC,UAAAO,SAAA;gBAGAhF,KAAAuC,MAAAqC,KAAAtC,SACAA,OAAA2C,aAAAjF,KAAAkD,OAEAlD,KAAAmF;;QA/CA,IAAA/C,SAAAjC,8CAAA,IACAgC,WAAAhC,+CAAA,GAAAgC,UACAiD,UAAAjF,iDAAA,IACAwK,WAAAvF,QAAAuF;QA8CAxI,SAAAqL,aAAApL,SAEAoL,YAAA9L,UAAA4E,UAAA;YACA,IAAApB,IAAAlF,KAAA+F,SAAA/F,KAAAuC,MAAAkC,UAAAO,SAAA,GACAxB,IAAAxD,KAAA8F,SAAA9F,KAAAgQ;YACA;gBAAAxM;gBAAA0B;;WAGAsI,YAAA9L,UAAA6E,WAAA;YACA,IAAArB,IAAAlF,KAAA+F,SAAA/F,KAAAuC,MAAAkC,UAAAO,SAAA,GACAxB,IAAAxD,KAAA8F,SAAA9F,KAAAuC,MAAAkC,UAAAC,QAAA1E,KAAAgQ;YACA;gBAAAxM;gBAAA0B;;WAGAxF,OAAAD,UAAA+N;;;;;;IZ0hDM,SAAU9N,QAAQD,SAASU;QatlDjC,SAAAoN,UAAAlL,OAAApB;YACA,IAAAqB,SAAAD,MAAAG,MAAAiR,KAAA;YACAxS,yBACAmB,OAAA5B,KAAAR,MAAAqC,OAAApB,SAAAqB;;QANA,IAAAF,SAAAjC,8CAAA,IACAgC,WAAAhC,+CAAA,GAAAgC;QAOAA,SAAAoL,WAAAnL,SAEA1C,OAAAD,UAAA8N;;;;;;IbmmDM,SAAU7N,QAAQD,SAASU;Qc1mDjC,SAAAiN,MAAA/K,OAAApB;YACA,IAAAqB,SAAAD,MAAAG,MAAAiR,KAAA;YACAxS,yBACAA,QAAAiC,OAAAjC,QAAAiC,QAAA,SACAd,OAAA5B,KAAAR,MAAAqC,OAAApB,SAAAqB;;QAPA,IAAAF,SAAAjC,8CAAA,IACAgC,WAAAhC,+CAAA,GAAAgC;QAQAA,SAAAiL,OAAAhL,SAEA1C,OAAAD,UAAA2N;;;;;;Id8oDM,SAAU1N,QAAQD,SAASU;QetpDjC,SAAAsN,WAAApL,OAAApB;YACA,IAAAqB,SAAAD,MAAAG,MAAAiR,KAAA;YACAxS,yBACAmB,OAAA5B,KAAAR,MAAAqC,OAAApB,SAAAqB,SAEAA,OAAAgB;gBACAoB,OAAA1E,KAAAkD,KAAAuB,UAAAC,QAAA,IAAA1E,KAAAqD,QAAA;gBAGArD,KAAAkD,KAAAI;gBACAE,GAAA,IAAAxD,KAAAqD,QAAA;;YAGA,IAAAqQ,YAAArR,MAAAG,MAAAiR,KAAA;YACAC,UAAApQ;gBACAE,GAAAxD,KAAAqD,QAAA;gBACAyB,QAAA9E,KAAAqD,QAAA;gBACA0B,gBAAA/E,KAAAqD,QAAA;gBACAqB,OAAA1E,KAAAkD,KAAAuB,UAAAC,QAAA,IAAA1E,KAAAqD,QAAA;gBACA2B,QAAAhF,KAAAkD,KAAAuB,UAAAO,SAAA,IAAAhF,KAAAqD,QAAA;gBACAI,MAAAzD,KAAAqD,QAAA;gBAEApC,QAAA6B,QAAA4Q,UAAAvQ,KAAA7C,KAAAW,QAAA6B,MAAA;YAEA,IAAAa,OAAA3D,KAAAqD,QAAA,SACAO,QAAA5D,KAAAqD,QAAA,gBACAQ,QAAA7D,KAAAqD,QAAA;YAEAM,QAAA+P,UAAApQ;gBAAAK;gBACAC,SAAA8P,UAAApQ;gBAAAQ,eAAAF;gBACAC,SAAA6P,UAAApQ;gBAAAS,eAAAF;gBAEA5C,QAAA+C,QAAA0P,UAAApQ,KAAA,QAAArC,QAAA+C,OACA/C,QAAAgD,UAAAyP,UAAApQ,KAAA,UAAArC,QAAAgD;YACAjE,KAAAuC,MAAAqC,KAAA8O,YACAA,UAAAzO,aAAAjF,KAAAkD,OAEAlD,KAAAmF;;QAxCA,IAAA/C,SAAAjC,8CAAA,IACAgC,WAAAhC,+CAAA,GAAAgC;QAyCAA,SAAAsL,YAAArL,SAEA1C,OAAAD,UAAAgO;;;;;;IfmqDM,SAAU/N,QAAQD,SAASU;QgB/sDjC,0BAAAwT,QAAA;YACA,IAAA/S,QAAAT,6CAAA;aACA,SAAAyT;gBACAA,EAAAC,GAAA/C,YAAA,SAAA7P;oBACA,OAAAjB,KAAA8T,KAAA;wBACA,IAAAC,QAAAH,EAAA5T,OACAqC,QAAAzB,MAAAmT,MAAA7Q;wBACA6Q,MAAAC,KAAA,KACA3R,MAAA2K,QAAAhN,MAAAiB;;;cAGA0S;;;;;;;IhB0tDM,SAAUjU,QAAQD;QiBruDxBC,OAAAD,UAAAQ","file":"flowchart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_15__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_15__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(/*! ./src/flowchart.shim */ 8);\r\n\tvar parse = __webpack_require__(/*! ./src/flowchart.parse */ 4);\r\n\t__webpack_require__(/*! ./src/jquery-plugin */ 14);\r\n\t\r\n\tvar FlowChart = {\r\n\t\tparse: parse\r\n\t};\r\n\t\r\n\tif (typeof window !== 'undefined') {\r\n\t\twindow.flowchart = FlowChart;\r\n\t}\r\n\t\r\n\tmodule.exports = FlowChart;\r\n\n\n/***/ }),\n/* 1 */\n/*!**********************************!*\\\n  !*** ./src/flowchart.helpers.js ***!\n  \\**********************************/\n/***/ (function(module, exports) {\n\n\tfunction _defaults(options, defaultOptions) {\r\n\t  if (!options || typeof options === 'function') {\r\n\t    return defaultOptions;\r\n\t  }\r\n\t\r\n\t  var merged = {};\r\n\t  for (var attrname in defaultOptions) {\r\n\t    merged[attrname] = defaultOptions[attrname];\r\n\t  }\r\n\t\r\n\t  for (attrname in options) {\r\n\t    if (options[attrname]) {\r\n\t      if (typeof merged[attrname] === 'object') {\r\n\t        merged[attrname] = _defaults(merged[attrname], options[attrname]);\r\n\t      } else {\r\n\t        merged[attrname] = options[attrname];\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  return merged;\r\n\t}\r\n\t\r\n\tfunction _inherits(ctor, superCtor) {\r\n\t  if (typeof(Object.create) === 'function') {\r\n\t    // implementation from standard node.js 'util' module\r\n\t    ctor.super_ = superCtor;\r\n\t    ctor.prototype = Object.create(superCtor.prototype, {\r\n\t      constructor: {\r\n\t        value: ctor,\r\n\t        enumerable: false,\r\n\t        writable: true,\r\n\t        configurable: true\r\n\t      }\r\n\t    });\r\n\t  } else {\r\n\t    // old school shim for old browsers\r\n\t    ctor.super_ = superCtor;\r\n\t    var TempCtor = function () {};\r\n\t    TempCtor.prototype = superCtor.prototype;\r\n\t    ctor.prototype = new TempCtor();\r\n\t    ctor.prototype.constructor = ctor;\r\n\t  }\r\n\t}\r\n\t\r\n\t// move dependent functions to a container so that\r\n\t// they can be overriden easier in no jquery environment (node.js)\r\n\tmodule.exports = {\r\n\t  defaults: _defaults,\r\n\t  inherits: _inherits\r\n\t};\r\n\n\n/***/ }),\n/* 2 */\n/*!*********************************!*\\\n  !*** ./src/flowchart.symbol.js ***!\n  \\*********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\r\n\tvar drawLine = drawAPI.drawLine;\r\n\tvar checkLineIntersection = drawAPI.checkLineIntersection;\r\n\t\r\n\tfunction Symbol(chart, options, symbol) {\r\n\t  this.chart = chart;\r\n\t  this.group = this.chart.paper.set();\r\n\t  this.symbol = symbol;\r\n\t  this.connectedTo = [];\r\n\t  this.symbolType = options.symbolType;\r\n\t  this.flowstate = (options.flowstate || 'future');\r\n\t  this.lineStyle = (options.lineStyle || {});\r\n\t  this.key = (options.key || '');\r\n\t\r\n\t  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\r\n\t\r\n\t  this.text = this.chart.paper.text(0, 0, options.text);\r\n\t  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\r\n\t  if (options.key) { this.text.node.id = options.key + 't'; }\r\n\t  this.text.node.setAttribute('class', this.getAttr('class') + 't');\r\n\t\r\n\t  this.text.attr({\r\n\t    'text-anchor': 'start',\r\n\t    'x'          : this.getAttr('text-margin'),\r\n\t    'fill'       : this.getAttr('font-color'),\r\n\t    'font-size'  : this.getAttr('font-size')\r\n\t  });\r\n\t\r\n\t  var font  = this.getAttr('font');\r\n\t  var fontF = this.getAttr('font-family');\r\n\t  var fontW = this.getAttr('font-weight');\r\n\t\r\n\t  if (font) this.text.attr({ 'font': font });\r\n\t  if (fontF) this.text.attr({ 'font-family': fontF });\r\n\t  if (fontW) this.text.attr({ 'font-weight': fontW });\r\n\t\r\n\t  if (options.link) { this.text.attr('href', options.link); }\r\n\t  if (options.target) { this.text.attr('target', options.target); }\r\n\t\r\n\t  var maxWidth = this.getAttr('maxWidth');\r\n\t  if (maxWidth) {\r\n\t    // using this approach: http://stackoverflow.com/a/3153457/22466\r\n\t    var words = options.text.split(' ');\r\n\t    var tempText = \"\";\r\n\t    for (var i=0, ii=words.length; i<ii; i++) {\r\n\t      var word = words[i];\r\n\t      this.text.attr(\"text\", tempText + \" \" + word);\r\n\t      if (this.text.getBBox().width > maxWidth) {\r\n\t        tempText += \"\\n\" + word;\r\n\t      } else {\r\n\t        tempText += \" \" + word;\r\n\t      }\r\n\t    }\r\n\t    this.text.attr(\"text\", tempText.substring(1));\r\n\t  }\r\n\t\r\n\t  this.group.push(this.text);\r\n\t\r\n\t  if (symbol) {\r\n\t    var tmpMargin = this.getAttr('text-margin');\r\n\t\r\n\t    symbol.attr({\r\n\t      'fill' : this.getAttr('fill'),\r\n\t      'stroke' : this.getAttr('element-color'),\r\n\t      'stroke-width' : this.getAttr('line-width'),\r\n\t      'width' : this.text.getBBox().width + 2 * tmpMargin,\r\n\t      'height' : this.text.getBBox().height + 2 * tmpMargin\r\n\t    });\r\n\t\r\n\t    symbol.node.setAttribute('class', this.getAttr('class'));\r\n\t\r\n\t    if (options.link) { symbol.attr('href', options.link); }\r\n\t    if (options.target) { symbol.attr('target', options.target); }\r\n\t    if (options.key) { symbol.node.id = options.key; }\r\n\t\r\n\t    this.group.push(symbol);\r\n\t    symbol.insertBefore(this.text);\r\n\t\r\n\t    this.text.attr({\r\n\t      'y': symbol.getBBox().height/2\r\n\t    });\r\n\t\r\n\t    this.initialize();\r\n\t  }\r\n\t\r\n\t}\r\n\t\r\n\t/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\r\n\tSymbol.prototype.getAttr = function(attName) {\r\n\t  if (!this.chart) {\r\n\t    return undefined;\r\n\t  }\r\n\t  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\r\n\t  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\r\n\t  var opt1;\r\n\t  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\r\n\t    opt1 = this.chart.options.flowstate[this.flowstate][attName];\r\n\t  }\r\n\t  return (opt1 || opt2 || opt3);\r\n\t};\r\n\t\r\n\tSymbol.prototype.initialize = function() {\r\n\t  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\r\n\t\r\n\t  this.width = this.group.getBBox().width;\r\n\t  this.height = this.group.getBBox().height;\r\n\t};\r\n\t\r\n\tSymbol.prototype.getCenter = function() {\r\n\t  return {x: this.getX() + this.width/2,\r\n\t          y: this.getY() + this.height/2};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getX = function() {\r\n\t  return this.group.getBBox().x;\r\n\t};\r\n\t\r\n\tSymbol.prototype.getY = function() {\r\n\t  return this.group.getBBox().y;\r\n\t};\r\n\t\r\n\tSymbol.prototype.shiftX = function(x) {\r\n\t  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\r\n\t};\r\n\t\r\n\tSymbol.prototype.setX = function(x) {\r\n\t  this.group.transform('t' + x + ',' + this.getY());\r\n\t};\r\n\t\r\n\tSymbol.prototype.shiftY = function(y) {\r\n\t  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\r\n\t};\r\n\t\r\n\tSymbol.prototype.setY = function(y) {\r\n\t  this.group.transform('t' + this.getX() + ',' + y);\r\n\t};\r\n\t\r\n\tSymbol.prototype.getTop = function() {\r\n\t  var y = this.getY();\r\n\t  var x = this.getX() + this.width/2;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getBottom = function() {\r\n\t  var y = this.getY() + this.height;\r\n\t  var x = this.getX() + this.width/2;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getLeft = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX();\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getRight = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX() + this.group.getBBox().width;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.render = function() {\r\n\t  if (this.next) {\r\n\t\r\n\t    var lineLength = this.getAttr('line-length');\r\n\t\r\n\t    if (this.next_direction === 'right') {\r\n\t\r\n\t      var rightPoint = this.getRight();\r\n\t\r\n\t      if (!this.next.isPositioned) {\r\n\t\r\n\t        this.next.setY(rightPoint.y - this.next.height/2);\r\n\t        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\t\r\n\t        var self = this;\r\n\t        (function shift() {\r\n\t          var hasSymbolUnder = false;\r\n\t          var symb;\r\n\t          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t            symb = self.chart.symbols[i];\r\n\t\r\n\t            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\r\n\t            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t\r\n\t          if (hasSymbolUnder) {\r\n\t            self.next.setX(symb.getX() + symb.width + lineLength);\r\n\t            shift();\r\n\t          }\r\n\t        })();\r\n\t\r\n\t        this.next.isPositioned = true;\r\n\t\r\n\t        this.next.render();\r\n\t      }\r\n\t    } else {\r\n\t      var bottomPoint = this.getBottom();\r\n\t\r\n\t      if (!this.next.isPositioned) {\r\n\t        this.next.shiftY(this.getY() + this.height + lineLength);\r\n\t        this.next.setX(bottomPoint.x - this.next.width/2);\r\n\t        this.next.isPositioned = true;\r\n\t\r\n\t        this.next.render();\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tSymbol.prototype.renderLines = function() {\r\n\t  if (this.next) {\r\n\t    if (this.next_direction) {\r\n\t      this.drawLineTo(this.next, '', this.next_direction);\r\n\t    } else {\r\n\t      this.drawLineTo(this.next);\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tSymbol.prototype.drawLineTo = function(symbol, text, origin) {\r\n\t  if (this.connectedTo.indexOf(symbol) < 0) {\r\n\t    this.connectedTo.push(symbol);\r\n\t  }\r\n\t\r\n\t  var x = this.getCenter().x,\r\n\t      y = this.getCenter().y,\r\n\t      right = this.getRight(),\r\n\t      bottom = this.getBottom(),\r\n\t      left = this.getLeft();\r\n\t\r\n\t  var symbolX = symbol.getCenter().x,\r\n\t      symbolY = symbol.getCenter().y,\r\n\t      symbolTop = symbol.getTop(),\r\n\t      symbolRight = symbol.getRight(),\r\n\t      symbolLeft = symbol.getLeft();\r\n\t\r\n\t  var isOnSameColumn = x === symbolX,\r\n\t      isOnSameLine = y === symbolY,\r\n\t      isUnder = y < symbolY,\r\n\t      isUpper = y > symbolY || this === symbol,\r\n\t      isLeft = x > symbolX,\r\n\t      isRight = x < symbolX;\r\n\t\r\n\t  var maxX = 0,\r\n\t      line,\r\n\t      lineLength = this.getAttr('line-length'),\r\n\t      lineWith = this.getAttr('line-width');\r\n\t\r\n\t  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\r\n\t    line = drawLine(this.chart, bottom, symbolTop, text);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x;\r\n\t  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\r\n\t    line = drawLine(this.chart, right, symbolLeft, text);\r\n\t    this.rightStart = true;\r\n\t    symbol.leftEnd = true;\r\n\t    maxX = symbolLeft.x;\r\n\t  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\r\n\t    line = drawLine(this.chart, left, symbolRight, text);\r\n\t    this.leftStart = true;\r\n\t    symbol.rightEnd = true;\r\n\t    maxX = symbolRight.x;\r\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: right.x + lineLength/2, y: right.y},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: right.x + lineLength/2, y: right.y},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((!origin || origin === 'bottom') && isLeft) {\r\n\t    if (this.leftEnd && isUpper) {\r\n\t      line = drawLine(this.chart, bottom, [\r\n\t        {x: bottom.x, y: bottom.y + lineLength/2},\r\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\r\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\r\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t        {x: symbolTop.x, y: symbolTop.y}\r\n\t      ], text);\r\n\t    } else {\r\n\t      line = drawLine(this.chart, bottom, [\r\n\t        {x: bottom.x, y: symbolTop.y - lineLength/2},\r\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t        {x: symbolTop.x, y: symbolTop.y}\r\n\t      ], text);\r\n\t    }\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n\t  } else if ((!origin || origin === 'bottom') && isRight) {\r\n\t    line = drawLine(this.chart, bottom, [\r\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\r\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\r\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n\t  } else if ((origin && origin === 'right') && isLeft) {\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: right.x + lineLength/2, y: right.y},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((origin && origin === 'right') && isRight) {\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: symbolTop.x, y: right.y},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\r\n\t    line = drawLine(this.chart, bottom, [\r\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\r\n\t      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x + lineLength/2;\r\n\t  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\r\n\t    var diffX = left.x - lineLength/2;\r\n\t    if (symbolLeft.x < left.x) {\r\n\t      diffX = symbolLeft.x - lineLength/2;\r\n\t    }\r\n\t    line = drawLine(this.chart, left, [\r\n\t      {x: diffX, y: left.y},\r\n\t      {x: diffX, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.leftStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = left.x;\r\n\t  } else if ((origin === 'left')) {\r\n\t    line = drawLine(this.chart, left, [\r\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\r\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.leftStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = left.x;\r\n\t  }\r\n\t\r\n\t  //update line style\r\n\t  if (this.lineStyle[symbol.key] && line){\r\n\t      line.attr( this.lineStyle[symbol.key]);\r\n\t  }\r\n\t\r\n\t  if (line) {\r\n\t    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\r\n\t      var otherLine = this.chart.lines[l];\r\n\t      var len;\r\n\t\r\n\t      var ePath = otherLine.attr('path'),\r\n\t          lPath = line.attr('path');\r\n\t\r\n\t      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\r\n\t        var newPath = [];\r\n\t        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\r\n\t        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\r\n\t\r\n\t        var line1_from_x = newPath[0][1];\r\n\t        var line1_from_y = newPath[0][2];\r\n\t        var line1_to_x = newPath[1][1];\r\n\t        var line1_to_y = newPath[1][2];\r\n\t\r\n\t        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\r\n\t          var newLinePath = [];\r\n\t          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\r\n\t          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\r\n\t\r\n\t          var line2_from_x = newLinePath[0][1];\r\n\t          var line2_from_y = newLinePath[0][2];\r\n\t          var line2_to_x = newLinePath[1][1];\r\n\t          var line2_to_y = newLinePath[1][2];\r\n\t\r\n\t          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\r\n\t          if (res.onLine1 && res.onLine2) {\r\n\t\r\n\t            var newSegment;\r\n\t            if (line2_from_y === line2_to_y) {\r\n\t              if (line2_from_x > line2_to_x) {\r\n\t                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              } else {\r\n\t                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              }\r\n\t            } else {\r\n\t              if (line2_from_y > line2_to_y) {\r\n\t                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              } else {\r\n\t                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              }\r\n\t            }\r\n\t\r\n\t            lP += 2;\r\n\t            len += 2;\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t    this.chart.lines.push(line);\r\n\t  }\r\n\t\r\n\t  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\r\n\t    this.chart.maxXFromLine = maxX;\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = Symbol;\r\n\n\n/***/ }),\n/* 3 */\n/*!************************************!*\\\n  !*** ./src/flowchart.functions.js ***!\n  \\************************************/\n/***/ (function(module, exports) {\n\n\tfunction drawPath(chart, location, points) {\r\n\t  var i, len;\r\n\t  var path = 'M{0},{1}';\r\n\t  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\r\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n\t  }\r\n\t  var pathValues = [location.x, location.y];\r\n\t  for (i = 0, len = points.length; i < len; i++) {\r\n\t    pathValues.push(points[i].x);\r\n\t    pathValues.push(points[i].y);\r\n\t  }\r\n\t  var symbol = chart.paper.path(path, pathValues);\r\n\t  symbol.attr('stroke', chart.options['element-color']);\r\n\t  symbol.attr('stroke-width', chart.options['line-width']);\r\n\t\r\n\t  var font = chart.options.font;\r\n\t  var fontF = chart.options['font-family'];\r\n\t  var fontW = chart.options['font-weight'];\r\n\t\r\n\t  if (font) symbol.attr({ 'font': font });\r\n\t  if (fontF) symbol.attr({ 'font-family': fontF });\r\n\t  if (fontW) symbol.attr({ 'font-weight': fontW });\r\n\t\r\n\t  return symbol;\r\n\t}\r\n\t\r\n\tfunction drawLine(chart, from, to, text) {\r\n\t  var i, len;\r\n\t\r\n\t  if (Object.prototype.toString.call(to) !== '[object Array]') {\r\n\t    to = [to];\r\n\t  }\r\n\t\r\n\t  var path = 'M{0},{1}';\r\n\t  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\r\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n\t  }\r\n\t  var pathValues = [from.x, from.y];\r\n\t  for (i = 0, len = to.length; i < len; i++) {\r\n\t    pathValues.push(to[i].x);\r\n\t    pathValues.push(to[i].y);\r\n\t  }\r\n\t\r\n\t  var line = chart.paper.path(path, pathValues);\r\n\t  line.attr({\r\n\t    stroke: chart.options['line-color'],\r\n\t    'stroke-width': chart.options['line-width'],\r\n\t    'arrow-end': chart.options['arrow-end']\r\n\t  });\r\n\t\r\n\t  var font = chart.options.font;\r\n\t  var fontF = chart.options['font-family'];\r\n\t  var fontW = chart.options['font-weight'];\r\n\t\r\n\t  if (font) line.attr({ 'font': font });\r\n\t  if (fontF) line.attr({ 'font-family': fontF });\r\n\t  if (fontW) line.attr({ 'font-weight': fontW });\r\n\t\r\n\t  if (text) {\r\n\t\r\n\t    var centerText = false;\r\n\t\r\n\t    var textPath = chart.paper.text(0, 0, text);\r\n\t\r\n\t    var isHorizontal = false;\r\n\t    var firstTo = to[0];\r\n\t\r\n\t    if (from.y === firstTo.y) {\r\n\t      isHorizontal = true;\r\n\t    }\r\n\t\r\n\t    var x = 0,\r\n\t        y = 0;\r\n\t\r\n\t    if (centerText) {\r\n\t      if (from.x > firstTo.x) {\r\n\t        x = from.x - (from.x - firstTo.x)/2;\r\n\t      } else {\r\n\t        x = firstTo.x - (firstTo.x - from.x)/2;\r\n\t      }\r\n\t\r\n\t      if (from.y > firstTo.y) {\r\n\t        y = from.y - (from.y - firstTo.y)/2;\r\n\t      } else {\r\n\t        y = firstTo.y - (firstTo.y - from.y)/2;\r\n\t      }\r\n\t\r\n\t      if (isHorizontal) {\r\n\t        x -= textPath.getBBox().width/2;\r\n\t        y -= chart.options['text-margin'];\r\n\t      } else {\r\n\t        x += chart.options['text-margin'];\r\n\t        y -= textPath.getBBox().height/2;\r\n\t      }\r\n\t    } else {\r\n\t      x = from.x;\r\n\t      y = from.y;\r\n\t\r\n\t      if (isHorizontal) {\r\n\t        x += chart.options['text-margin']/2;\r\n\t        y -= chart.options['text-margin'];\r\n\t      } else {\r\n\t        x += chart.options['text-margin']/2;\r\n\t        y += chart.options['text-margin'];\r\n\t      }\r\n\t    }\r\n\t\r\n\t    textPath.attr({\r\n\t      'text-anchor': 'start',\r\n\t      'font-size': chart.options['font-size'],\r\n\t      'fill': chart.options['font-color'],\r\n\t      x: x,\r\n\t      y: y\r\n\t    });\r\n\t\r\n\t    if (font) textPath.attr({ 'font': font });\r\n\t    if (fontF) textPath.attr({ 'font-family': fontF });\r\n\t    if (fontW) textPath.attr({ 'font-weight': fontW });\r\n\t  }\r\n\t\r\n\t  return line;\r\n\t}\r\n\t\r\n\tfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\r\n\t  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\r\n\t  var denominator, a, b, numerator1, numerator2, result = {\r\n\t    x: null,\r\n\t    y: null,\r\n\t    onLine1: false,\r\n\t    onLine2: false\r\n\t  };\r\n\t  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\r\n\t  if (denominator === 0) {\r\n\t    return result;\r\n\t  }\r\n\t  a = line1StartY - line2StartY;\r\n\t  b = line1StartX - line2StartX;\r\n\t  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\r\n\t  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\r\n\t  a = numerator1 / denominator;\r\n\t  b = numerator2 / denominator;\r\n\t\r\n\t  // if we cast these lines infinitely in both directions, they intersect here:\r\n\t  result.x = line1StartX + (a * (line1EndX - line1StartX));\r\n\t  result.y = line1StartY + (a * (line1EndY - line1StartY));\r\n\t  /*\r\n\t  // it is worth noting that this should be the same as:\r\n\t  x = line2StartX + (b * (line2EndX - line2StartX));\r\n\t  y = line2StartX + (b * (line2EndY - line2StartY));\r\n\t  */\r\n\t  // if line1 is a segment and line2 is infinite, they intersect if:\r\n\t  if (a > 0 && a < 1) {\r\n\t    result.onLine1 = true;\r\n\t  }\r\n\t  // if line2 is a segment and line1 is infinite, they intersect if:\r\n\t  if (b > 0 && b < 1) {\r\n\t    result.onLine2 = true;\r\n\t  }\r\n\t  // if line1 and line2 are segments, they intersect if both of the above are true\r\n\t  return result;\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t\tdrawPath: drawPath,\r\n\t\tdrawLine: drawLine,\r\n\t\tcheckLineIntersection: checkLineIntersection\r\n\t};\r\n\n\n/***/ }),\n/* 4 */\n/*!********************************!*\\\n  !*** ./src/flowchart.parse.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar FlowChart = __webpack_require__(/*! ./flowchart.chart */ 6);\r\n\tvar Start = __webpack_require__(/*! ./flowchart.symbol.start */ 12);\r\n\tvar End = __webpack_require__(/*! ./flowchart.symbol.end */ 9);\r\n\tvar Operation = __webpack_require__(/*! ./flowchart.symbol.operation */ 11);\r\n\tvar InputOutput = __webpack_require__(/*! ./flowchart.symbol.inputoutput */ 10);\r\n\tvar Subroutine = __webpack_require__(/*! ./flowchart.symbol.subroutine */ 13);\r\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\r\n\t\r\n\tfunction parse(input) {\r\n\t  input = input || '';\r\n\t  input = input.trim();\r\n\t\r\n\t  var chart = {\r\n\t    symbols: {},\r\n\t    start: null,\r\n\t    drawSVG: function(container, options) {\r\n\t      var self = this;\r\n\t\r\n\t      if (this.diagram) {\r\n\t        this.diagram.clean();\r\n\t      }\r\n\t\r\n\t      var diagram = new FlowChart(container, options);\r\n\t      this.diagram = diagram;\r\n\t      var dispSymbols = {};\r\n\t\r\n\t      function getDisplaySymbol(s) {\r\n\t        if (dispSymbols[s.key]) {\r\n\t          return dispSymbols[s.key];\r\n\t        }\r\n\t\r\n\t        switch (s.symbolType) {\r\n\t          case 'start':\r\n\t            dispSymbols[s.key] = new Start(diagram, s);\r\n\t            break;\r\n\t          case 'end':\r\n\t            dispSymbols[s.key] = new End(diagram, s);\r\n\t            break;\r\n\t          case 'operation':\r\n\t            dispSymbols[s.key] = new Operation(diagram, s);\r\n\t            break;\r\n\t          case 'inputoutput':\r\n\t            dispSymbols[s.key] = new InputOutput(diagram, s); \r\n\t            break;\r\n\t          case 'subroutine':\r\n\t            dispSymbols[s.key] = new Subroutine(diagram, s);\r\n\t            break;\r\n\t          case 'condition':\r\n\t            dispSymbols[s.key] = new Condition(diagram, s);\r\n\t            break;\r\n\t          default:\r\n\t            return new Error('Wrong symbol type!');\r\n\t        }\r\n\t\r\n\t        return dispSymbols[s.key];\r\n\t      }\r\n\t\r\n\t      (function constructChart(s, prevDisp, prev) {\r\n\t        var dispSymb = getDisplaySymbol(s);\r\n\t\r\n\t        if (self.start === s) {\r\n\t          diagram.startWith(dispSymb);\r\n\t        } else if (prevDisp && prev && !prevDisp.pathOk) {\r\n\t          if (prevDisp instanceof(Condition)) {\r\n\t            if (prev.yes === s) {\r\n\t              prevDisp.yes(dispSymb);\r\n\t            }\r\n\t            if (prev.no === s) {\r\n\t              prevDisp.no(dispSymb);\r\n\t            }\r\n\t          } else {\r\n\t            prevDisp.then(dispSymb);\r\n\t          }\r\n\t        }\r\n\t\r\n\t        if (dispSymb.pathOk) {\r\n\t          return dispSymb;\r\n\t        }\r\n\t\r\n\t        if (dispSymb instanceof(Condition)) {\r\n\t          if (s.yes) {\r\n\t            constructChart(s.yes, dispSymb, s);\r\n\t          }\r\n\t          if (s.no) {\r\n\t            constructChart(s.no, dispSymb, s);\r\n\t          }\r\n\t        } else if (s.next) {\r\n\t          constructChart(s.next, dispSymb, s);\r\n\t        }\r\n\t\r\n\t        return dispSymb;\r\n\t      })(this.start);\r\n\t\r\n\t      diagram.render();\r\n\t    },\r\n\t    clean: function() {\r\n\t      this.diagram.clean();\r\n\t    }\r\n\t  };\r\n\t\r\n\t  var lines = [];\r\n\t  var prevBreak = 0;\r\n\t  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\r\n\t    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\r\n\t      var line0 = input.substring(prevBreak, i0);\r\n\t      prevBreak = i0 + 1;\r\n\t      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if(prevBreak < input.length) {\r\n\t    lines.push(input.substr(prevBreak));\r\n\t  }\r\n\t\r\n\t  for (var l = 1, len = lines.length; l < len;) {\r\n\t    var currentLine = lines[l];\r\n\t\r\n\t    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\r\n\t      lines[l - 1] += '\\n' + currentLine;\r\n\t      lines.splice(l, 1);\r\n\t      len--;\r\n\t    } else {\r\n\t      l++;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  function getStyle(s){\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      return s.substring(startIndex,endIndex);\r\n\t    }\r\n\t    return '{}';\r\n\t  }\r\n\t\r\n\t  function getSymbValue(s){\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      return s.substring(startIndex,endIndex);\r\n\t    }\r\n\t    return '';\r\n\t  }\r\n\t\r\n\t  function getSymbol(s) {\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      return chart.symbols[s.substring(0, startIndex - 1)];   \r\n\t    }\r\n\t    return chart.symbols[s];\r\n\t  }\r\n\t\r\n\t  function getNextPath(s) {\r\n\t    var next = 'next';\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      next = flowSymb.substring(startIndex, endIndex);\r\n\t      if (next.indexOf(',') < 0) {\r\n\t        if (next !== 'yes' && next !== 'no') {\r\n\t          next = 'next, ' + next;\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t    return next;\r\n\t  }\r\n\t\r\n\t  while (lines.length > 0) {\r\n\t    var line = lines.splice(0, 1)[0].trim();\r\n\t\r\n\t    if (line.indexOf('=>') >= 0) {\r\n\t      // definition\r\n\t      var parts = line.split('=>');\r\n\t      var symbol = {\r\n\t        key: parts[0].replace(/\\(.*\\)/, ''),\r\n\t        symbolType: parts[1],\r\n\t        text: null,\r\n\t        link: null,\r\n\t        target: null,\r\n\t        flowstate: null,\r\n\t        lineStyle: {},\r\n\t        params: {}\r\n\t      };\r\n\t\r\n\t      //parse parameters\r\n\t      var params = parts[0].match(/\\((.*)\\)/);\r\n\t      if (params && params.length > 1){\r\n\t        var entries = params[1].split(',');\r\n\t        for(var i = 0; i < entries.length; i++) {\r\n\t          var entry = entries[0].split('=');\r\n\t          if (entry.length == 2){\r\n\t            symbol.params[entry[0]] = entry[1];\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t\r\n\t      var sub;\r\n\t\r\n\t      if (symbol.symbolType.indexOf(': ') >= 0) {\r\n\t        sub = symbol.symbolType.split(': ');\r\n\t        symbol.symbolType = sub.shift();\r\n\t        symbol.text = sub.join(': ');\r\n\t      }\r\n\t\r\n\t      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\r\n\t        sub = symbol.text.split(':>');\r\n\t        symbol.text = sub.shift();\r\n\t        symbol.link = sub.join(':>');\r\n\t      } else if (symbol.symbolType.indexOf(':>') >= 0) {\r\n\t        sub = symbol.symbolType.split(':>');\r\n\t        symbol.symbolType = sub.shift();\r\n\t        symbol.link = sub.join(':>');\r\n\t      }\r\n\t\r\n\t      if (symbol.symbolType.indexOf('\\n') >= 0) {\r\n\t        symbol.symbolType = symbol.symbolType.split('\\n')[0];\r\n\t      }\r\n\t\r\n\t      /* adding support for links */\r\n\t      if (symbol.link) {\r\n\t        var startIndex = symbol.link.indexOf('[') + 1;\r\n\t        var endIndex = symbol.link.indexOf(']');\r\n\t        if (startIndex >= 0 && endIndex >= 0) {\r\n\t          symbol.target = symbol.link.substring(startIndex, endIndex);\r\n\t          symbol.link = symbol.link.substring(0, startIndex - 1);\r\n\t        }\r\n\t      }\r\n\t      /* end of link support */\r\n\t\r\n\t      /* adding support for flowstates */\r\n\t      if (symbol.text) {\r\n\t        if (symbol.text.indexOf('|') >= 0) {\r\n\t          var txtAndState = symbol.text.split('|');\r\n\t          symbol.flowstate = txtAndState.pop().trim();\r\n\t          symbol.text = txtAndState.join('|');\r\n\t        }\r\n\t      }\r\n\t      /* end of flowstate support */\r\n\t\r\n\t      chart.symbols[symbol.key] = symbol;\r\n\t\r\n\t    } else if (line.indexOf('->') >= 0) {\r\n\t      // flow\r\n\t      var flowSymbols = line.split('->');\r\n\t      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\r\n\t        var flowSymb = flowSymbols[i];\r\n\t        var symbVal = getSymbValue(flowSymb);\r\n\t\r\n\t        if (symbVal === 'true' || symbVal === 'false') {\r\n\t          // map true or false to yes or no respectively\r\n\t          flowSymb = flowSymb.replace('true', 'yes');\r\n\t          flowSymb = flowSymb.replace('false', 'no');\r\n\t        }\r\n\t\r\n\t        var realSymb = getSymbol(flowSymb);\r\n\t        var next = getNextPath(flowSymb);\r\n\t\r\n\t        var direction = null;\r\n\t        if (next.indexOf(',') >= 0) {\r\n\t          var condOpt = next.split(',');\r\n\t          next = condOpt[0];\r\n\t          direction = condOpt[1].trim();\r\n\t        }\r\n\t\r\n\t        if (!chart.start) {\r\n\t          chart.start = realSymb;\r\n\t        }\r\n\t\r\n\t        if (i + 1 < lenS) {\r\n\t          var nextSymb = flowSymbols[i + 1];\r\n\t          realSymb[next] = getSymbol(nextSymb);\r\n\t          realSymb['direction_' + next] = direction;\r\n\t          direction = null;\r\n\t        }\r\n\t      }\r\n\t    } else if (line.indexOf('@>') >= 0) {\r\n\t\r\n\t      // line style\r\n\t      var lineStyleSymbols = line.split('@>');\r\n\t      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\r\n\t\r\n\t        if ((i+1) != lenS){\r\n\t          var curSymb = getSymbol(lineStyleSymbols[i]);\r\n\t          var nextSymb = getSymbol(lineStyleSymbols[i+1]);\r\n\t\r\n\t          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i+1]));\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t  }\r\n\t  return chart;\r\n\t}\r\n\t\r\n\tmodule.exports = parse;\r\n\n\n/***/ }),\n/* 5 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.condition.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\r\n\tvar drawPath = drawAPI.drawPath;\r\n\t\r\n\tfunction Condition(chart, options) {\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options);\r\n\t  this.textMargin = this.getAttr('text-margin');\r\n\t  this.yes_direction = 'bottom';\r\n\t  this.no_direction = 'right';\r\n\t  this.params = options.params;\r\n\t  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\r\n\t    if (options.direction_yes === 'right') {\r\n\t      this.no_direction = 'bottom';\r\n\t      this.yes_direction = 'right';\r\n\t    } else {\r\n\t      this.no_direction = 'right';\r\n\t      this.yes_direction = 'bottom';\r\n\t    }\r\n\t  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\r\n\t    if (options.direction_no === 'right') {\r\n\t      this.yes_direction = 'bottom';\r\n\t      this.no_direction = 'right';\r\n\t    } else {\r\n\t      this.yes_direction = 'right';\r\n\t      this.no_direction = 'bottom';\r\n\t    }\r\n\t  } else {\r\n\t    this.yes_direction = 'bottom';\r\n\t    this.no_direction = 'right';\r\n\t  }\r\n\t\r\n\t  this.yes_direction = this.yes_direction || 'bottom';\r\n\t  this.no_direction = this.no_direction || 'right';\r\n\t\r\n\t  this.text.attr({\r\n\t    x: this.textMargin * 2\r\n\t  });\r\n\t\r\n\t  var width = this.text.getBBox().width + 3 * this.textMargin;\r\n\t  width += width/2;\r\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n\t  height += height/2;\r\n\t  height = Math.max(width * 0.5, height);\r\n\t  var startX = width/4;\r\n\t  var startY = height/4;\r\n\t\r\n\t  this.text.attr({\r\n\t    x: startX + this.textMargin/2\r\n\t  });\r\n\t\r\n\t  var start = {x: startX, y: startY};\r\n\t  var points = [\r\n\t    {x: startX - width/4, y: startY + height/4},\r\n\t    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\r\n\t    {x: startX - width/4 + width, y: startY + height/4},\r\n\t    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\r\n\t    {x: startX - width/4, y: startY + height/4}\r\n\t  ];\r\n\t\r\n\t  var symbol = drawPath(chart, start, points);\r\n\t\r\n\t  symbol.attr({\r\n\t    stroke: this.getAttr('element-color'),\r\n\t    'stroke-width': this.getAttr('line-width'),\r\n\t    fill: this.getAttr('fill')\r\n\t  });\r\n\t  if (options.link) { symbol.attr('href', options.link); }\r\n\t  if (options.target) { symbol.attr('target', options.target); }\r\n\t  if (options.key) { symbol.node.id = options.key; }\r\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\t\r\n\t  this.text.attr({\r\n\t    y: symbol.getBBox().height/2\r\n\t  });\r\n\t\r\n\t  this.group.push(symbol);\r\n\t  symbol.insertBefore(this.text);\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(Condition, Symbol);\r\n\t\r\n\tCondition.prototype.render = function() {\r\n\t\r\n\t  if (this.yes_direction) {\r\n\t    this[this.yes_direction + '_symbol'] = this.yes_symbol;\r\n\t  }\r\n\t\r\n\t  if (this.no_direction) {\r\n\t    this[this.no_direction + '_symbol'] = this.no_symbol;\r\n\t  }\r\n\t\r\n\t  var lineLength = this.getAttr('line-length');\r\n\t\r\n\t  if (this.bottom_symbol) {\r\n\t    var bottomPoint = this.getBottom();\r\n\t\r\n\t    if (!this.bottom_symbol.isPositioned) {\r\n\t      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\r\n\t      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\r\n\t      this.bottom_symbol.isPositioned = true;\r\n\t\r\n\t      this.bottom_symbol.render();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if (this.right_symbol) {\r\n\t    var rightPoint = this.getRight();\r\n\t\r\n\t    if (!this.right_symbol.isPositioned) {\r\n\t\r\n\t      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\r\n\t      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\t\r\n\t      var self = this;\r\n\t      (function shift() {\r\n\t        var hasSymbolUnder = false;\r\n\t        var symb;\r\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t          symb = self.chart.symbols[i];\r\n\t\r\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \r\n\t            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\r\n\t            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t\r\n\t        if (hasSymbolUnder) {\r\n\t          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\r\n\t          shift();\r\n\t        }\r\n\t      })();\r\n\t\r\n\t      this.right_symbol.isPositioned = true;\r\n\t\r\n\t      this.right_symbol.render();\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tCondition.prototype.renderLines = function() {\r\n\t  if (this.yes_symbol) {\r\n\t    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\r\n\t  }\r\n\t\r\n\t  if (this.no_symbol) {\r\n\t    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = Condition;\r\n\n\n/***/ }),\n/* 6 */\n/*!********************************!*\\\n  !*** ./src/flowchart.chart.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Raphael = __webpack_require__(/*! raphael */ 15);\r\n\tvar defaults = __webpack_require__(/*! ./flowchart.helpers */ 1).defaults;\r\n\tvar defaultOptions = __webpack_require__(/*! ./flowchart.defaults */ 7);\r\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\r\n\t\r\n\tfunction FlowChart(container, options) {\r\n\t  options = options || {};\r\n\t\r\n\t  this.paper = new Raphael(container);\r\n\t\r\n\t  this.options = defaults(options, defaultOptions);\r\n\t\r\n\t  this.symbols = [];\r\n\t  this.lines = [];\r\n\t  this.start = null;\r\n\t}\r\n\t\r\n\tFlowChart.prototype.handle = function(symbol) {\r\n\t  if (this.symbols.indexOf(symbol) <= -1) {\r\n\t    this.symbols.push(symbol);\r\n\t  }\r\n\t\r\n\t  var flowChart = this;\r\n\t\r\n\t  if (symbol instanceof(Condition)) {\r\n\t    symbol.yes = function(nextSymbol) {\r\n\t      symbol.yes_symbol = nextSymbol;\r\n\t      if(symbol.no_symbol) {\r\n\t        symbol.pathOk = true;\r\n\t      }\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t    symbol.no = function(nextSymbol) {\r\n\t      symbol.no_symbol = nextSymbol;\r\n\t      if(symbol.yes_symbol) {\r\n\t        symbol.pathOk = true;\r\n\t      }\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t  } else {\r\n\t    symbol.then = function(nextSymbol) {\r\n\t      symbol.next = nextSymbol;\r\n\t      symbol.pathOk = true;\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t  }\r\n\t\r\n\t  return symbol;\r\n\t};\r\n\t\r\n\tFlowChart.prototype.startWith = function(symbol) {\r\n\t  this.start = symbol;\r\n\t  return this.handle(symbol);\r\n\t};\r\n\t\r\n\tFlowChart.prototype.render = function() {\r\n\t  var maxWidth = 0,\r\n\t      maxHeight = 0,\r\n\t      i = 0,\r\n\t      len = 0,\r\n\t      maxX = 0,\r\n\t      maxY = 0,\r\n\t      minX = 0,\r\n\t      minY = 0,\r\n\t      symbol,\r\n\t      line;\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    if (symbol.width > maxWidth) {\r\n\t      maxWidth = symbol.width;\r\n\t    }\r\n\t    if (symbol.height > maxHeight) {\r\n\t      maxHeight = symbol.height;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\r\n\t    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\r\n\t  }\r\n\t\r\n\t  this.start.render();\r\n\t  // for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t  //   symbol = this.symbols[i];\r\n\t  //   symbol.render();\r\n\t  // }\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    symbol.renderLines();\r\n\t  }\r\n\t\r\n\t  maxX = this.maxXFromLine;\r\n\t\r\n\t  var x;\r\n\t  var y;\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    x = symbol.getX() + symbol.width;\r\n\t    y = symbol.getY() + symbol.height;\r\n\t    if (x > maxX) {\r\n\t      maxX = x;\r\n\t    }\r\n\t    if (y > maxY) {\r\n\t      maxY = y;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  for (i = 0, len = this.lines.length; i < len; i++) {\r\n\t    line = this.lines[i].getBBox();\r\n\t    x = line.x;\r\n\t    y = line.y;\r\n\t    var x2 = line.x2;\r\n\t    var y2 = line.y2;\r\n\t    if (x < minX) {\r\n\t      minX = x;\r\n\t    }\r\n\t    if (y < minY) {\r\n\t      minY = y;\r\n\t    }\r\n\t    if (x2 > maxX) {\r\n\t      maxX = x2;\r\n\t    }\r\n\t    if (y2 > maxY) {\r\n\t      maxY = y2;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var scale = this.options['scale'];\r\n\t  var lineWidth = this.options['line-width'];\r\n\t\r\n\t  if (minX < 0) minX -= lineWidth;\r\n\t  if (minY < 0) minY -= lineWidth;\r\n\t\r\n\t  var width = maxX + lineWidth - minX;\r\n\t  var height = maxY + lineWidth - minY;\r\n\t\r\n\t  this.paper.setSize(width * scale, height * scale);\r\n\t  this.paper.setViewBox(minX, minY, width, height, true);\r\n\t};\r\n\t\r\n\tFlowChart.prototype.clean = function() {\r\n\t  if (this.paper) {\r\n\t    var paperDom = this.paper.canvas;\r\n\t    paperDom.parentNode.removeChild(paperDom);\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = FlowChart;\r\n\n\n/***/ }),\n/* 7 */\n/*!***********************************!*\\\n  !*** ./src/flowchart.defaults.js ***!\n  \\***********************************/\n/***/ (function(module, exports) {\n\n\t// defaults\r\n\tmodule.exports = {\r\n\t  'x': 0,\r\n\t  'y': 0,\r\n\t  'line-width': 3,\r\n\t  'line-length': 50,\r\n\t  'text-margin': 10,\r\n\t  'font-size': 14,\r\n\t  'font-color': 'black',\r\n\t  // 'font': 'normal',\r\n\t  // 'font-family': 'calibri',\r\n\t  // 'font-weight': 'normal',\r\n\t  'line-color': 'black',\r\n\t  'element-color': 'black',\r\n\t  'fill': 'white',\r\n\t  'yes-text': 'yes',\r\n\t  'no-text': 'no',\r\n\t  'arrow-end': 'block',\r\n\t  'class': 'flowchart',\r\n\t  'scale': 1,\r\n\t  'symbols': {\r\n\t    'start': {},\r\n\t    'end': {},\r\n\t    'condition': {},\r\n\t    'inputoutput': {},\r\n\t    'operation': {},\r\n\t    'subroutine': {}\r\n\t  }//,\r\n\t  // 'flowstate' : {\r\n\t  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\r\n\t  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\r\n\t  //   'future' : { 'fill': '#FFFF99'},\r\n\t  //   'invalid': {'fill': '#444444'}\r\n\t  // }\r\n\t};\r\n\n\n/***/ }),\n/* 8 */\n/*!*******************************!*\\\n  !*** ./src/flowchart.shim.js ***!\n  \\*******************************/\n/***/ (function(module, exports) {\n\n\t// add indexOf to non ECMA-262 standard compliant browsers\r\n\tif (!Array.prototype.indexOf) {\r\n\t  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\r\n\t    \"use strict\";\r\n\t    if (this === null) {\r\n\t      throw new TypeError();\r\n\t    }\r\n\t    var t = Object(this);\r\n\t    var len = t.length >>> 0;\r\n\t    if (len === 0) {\r\n\t      return -1;\r\n\t    }\r\n\t    var n = 0;\r\n\t    if (arguments.length > 0) {\r\n\t      n = Number(arguments[1]);\r\n\t      if (n != n) { // shortcut for verifying if it's NaN\r\n\t        n = 0;\r\n\t      } else if (n !== 0 && n != Infinity && n != -Infinity) {\r\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n\t      }\r\n\t    }\r\n\t    if (n >= len) {\r\n\t      return -1;\r\n\t    }\r\n\t    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n\t    for (; k < len; k++) {\r\n\t      if (k in t && t[k] === searchElement) {\r\n\t        return k;\r\n\t      }\r\n\t    }\r\n\t    return -1;\r\n\t  };\r\n\t}\r\n\t\r\n\t// add lastIndexOf to non ECMA-262 standard compliant browsers\r\n\tif (!Array.prototype.lastIndexOf) {\r\n\t  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\r\n\t    \"use strict\";\r\n\t    if (this === null) {\r\n\t      throw new TypeError();\r\n\t    }\r\n\t    var t = Object(this);\r\n\t    var len = t.length >>> 0;\r\n\t    if (len === 0) {\r\n\t      return -1;\r\n\t    }\r\n\t    var n = len;\r\n\t    if (arguments.length > 1) {\r\n\t      n = Number(arguments[1]);\r\n\t      if (n != n) {\r\n\t        n = 0;\r\n\t      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\r\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n\t      }\r\n\t    }\r\n\t    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\r\n\t    for (; k >= 0; k--) {\r\n\t      if (k in t && t[k] === searchElement) {\r\n\t        return k;\r\n\t      }\r\n\t    }\r\n\t    return -1;\r\n\t  };\r\n\t}\r\n\t\r\n\tif (!String.prototype.trim) {\r\n\t  String.prototype.trim = function() {\r\n\t    return this.replace(/^\\s+|\\s+$/g, '');\r\n\t  };\r\n\t}\n\n/***/ }),\n/* 9 */\n/*!*************************************!*\\\n  !*** ./src/flowchart.symbol.end.js ***!\n  \\*************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction End(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n\t  options = options || {};\r\n\t  options.text = options.text || 'End';\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t}\r\n\tinherits(End, Symbol);\r\n\t\r\n\tmodule.exports = End;\r\n\n\n/***/ }),\n/* 10 */\n/*!*********************************************!*\\\n  !*** ./src/flowchart.symbol.inputoutput.js ***!\n  \\*********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\r\n\tvar drawPath = drawAPI.drawPath;\r\n\t\r\n\tfunction InputOutput(chart, options) {\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options);\r\n\t  this.textMargin = this.getAttr('text-margin');\r\n\t\r\n\t  this.text.attr({\r\n\t    x: this.textMargin * 3\r\n\t  });\r\n\t\r\n\t  var width = this.text.getBBox().width + 4 * this.textMargin;\r\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n\t  var startX = this.textMargin;\r\n\t  var startY = height/2;\r\n\t\r\n\t  var start = {x: startX, y: startY};\r\n\t  var points = [\r\n\t    {x: startX - this.textMargin, y: height},\r\n\t    {x: startX - this.textMargin + width, y: height},\r\n\t    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\r\n\t    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\r\n\t    {x: startX, y: startY}\r\n\t  ];\r\n\t\r\n\t  var symbol = drawPath(chart, start, points);\r\n\t\r\n\t  symbol.attr({\r\n\t    stroke: this.getAttr('element-color'),\r\n\t    'stroke-width': this.getAttr('line-width'),\r\n\t    fill: this.getAttr('fill')\r\n\t  });\r\n\t  if (options.link) { symbol.attr('href', options.link); }\r\n\t  if (options.target) { symbol.attr('target', options.target); }\r\n\t  if (options.key) { symbol.node.id = options.key; }\r\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\t\r\n\t  this.text.attr({\r\n\t    y: symbol.getBBox().height/2\r\n\t  });\r\n\t\r\n\t  this.group.push(symbol);\r\n\t  symbol.insertBefore(this.text);\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(InputOutput, Symbol);\r\n\t\r\n\tInputOutput.prototype.getLeft = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX() + this.textMargin;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tInputOutput.prototype.getRight = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX() + this.group.getBBox().width - this.textMargin;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tmodule.exports = InputOutput;\r\n\n\n/***/ }),\n/* 11 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.operation.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Operation(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t}\r\n\tinherits(Operation, Symbol);\r\n\t\r\n\tmodule.exports = Operation;\r\n\n\n/***/ }),\n/* 12 */\n/*!***************************************!*\\\n  !*** ./src/flowchart.symbol.start.js ***!\n  \\***************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Start(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n\t  options = options || {};\r\n\t  options.text = options.text || 'Start';\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t}\r\n\tinherits(Start, Symbol);\r\n\t\r\n\tmodule.exports = Start;\r\n\t\r\n\t// Start.prototype.render = function() {\r\n\t//   if (this.next) {\r\n\t//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\r\n\t\r\n\t//     var bottomPoint = this.getBottom();\r\n\t//     var topPoint = this.next.getTop();\r\n\t\r\n\t//     if (!this.next.isPositioned) {\r\n\t//       this.next.shiftY(this.getY() + this.height + lineLength);\r\n\t//       this.next.setX(bottomPoint.x - this.next.width/2);\r\n\t//       this.next.isPositioned = true;\r\n\t\r\n\t//       this.next.render();\r\n\t//     }\r\n\t//   }\r\n\t// };\r\n\t\r\n\t// Start.prototype.renderLines = function() {\r\n\t//   if (this.next) {\r\n\t//     this.drawLineTo(this.next);\r\n\t//   }\r\n\t// };\r\n\n\n/***/ }),\n/* 13 */\n/*!********************************************!*\\\n  !*** ./src/flowchart.symbol.subroutine.js ***!\n  \\********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Subroutine(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t\r\n\t  symbol.attr({\r\n\t    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\r\n\t  });\r\n\t\r\n\t  this.text.attr({\r\n\t    'x': 2 * this.getAttr('text-margin')\r\n\t  });\r\n\t\r\n\t  var innerWrap = chart.paper.rect(0, 0, 0, 0);\r\n\t  innerWrap.attr({\r\n\t    x: this.getAttr('text-margin'),\r\n\t    stroke: this.getAttr('element-color'),\r\n\t    'stroke-width': this.getAttr('line-width'),\r\n\t    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\r\n\t    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\r\n\t    fill: this.getAttr('fill')\r\n\t  });\r\n\t  if (options.key) { innerWrap.node.id = options.key + 'i'; }\r\n\t\r\n\t  var font = this.getAttr('font');\r\n\t  var fontF = this.getAttr('font-family');\r\n\t  var fontW = this.getAttr('font-weight');\r\n\t\r\n\t  if (font) innerWrap.attr({ 'font': font });\r\n\t  if (fontF) innerWrap.attr({ 'font-family': fontF });\r\n\t  if (fontW) innerWrap.attr({ 'font-weight': fontW });\r\n\t\r\n\t  if (options.link) { innerWrap.attr('href', options.link); }\r\n\t  if (options.target) { innerWrap.attr('target', options.target); }\r\n\t  this.group.push(innerWrap);\r\n\t  innerWrap.insertBefore(this.text);\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(Subroutine, Symbol);\r\n\t\r\n\tmodule.exports = Subroutine;\r\n\n\n/***/ }),\n/* 14 */\n/*!******************************!*\\\n  !*** ./src/jquery-plugin.js ***!\n  \\******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tif (typeof jQuery != 'undefined') {\r\n\t\tvar parse = __webpack_require__(/*! ./flowchart.parse */ 4);\r\n\t\t(function( $ ) {\r\n\t\t\t$.fn.flowChart = function( options ) {\r\n\t\t\t\treturn this.each(function() {\r\n\t\t\t\t\tvar $this = $(this);\r\n\t\t\t\t\tvar chart = parse($this.text());\r\n\t\t\t\t\t$this.html('');\r\n\t\t\t\t\tchart.drawSVG(this, options);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t})(jQuery); // eslint-disable-line\r\n\t}\r\n\n\n/***/ }),\n/* 15 */\n/*!**************************!*\\\n  !*** external \"Raphael\" ***!\n  \\**************************/\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// flowchart.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b25fc93d093648e4134a","require('./src/flowchart.shim');\r\nvar parse = require('./src/flowchart.parse');\r\nrequire('./src/jquery-plugin');\r\n\r\nvar FlowChart = {\r\n\tparse: parse\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.flowchart = FlowChart;\r\n}\r\n\r\nmodule.exports = FlowChart;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0","function _defaults(options, defaultOptions) {\r\n  if (!options || typeof options === 'function') {\r\n    return defaultOptions;\r\n  }\r\n\r\n  var merged = {};\r\n  for (var attrname in defaultOptions) {\r\n    merged[attrname] = defaultOptions[attrname];\r\n  }\r\n\r\n  for (attrname in options) {\r\n    if (options[attrname]) {\r\n      if (typeof merged[attrname] === 'object') {\r\n        merged[attrname] = _defaults(merged[attrname], options[attrname]);\r\n      } else {\r\n        merged[attrname] = options[attrname];\r\n      }\r\n    }\r\n  }\r\n  return merged;\r\n}\r\n\r\nfunction _inherits(ctor, superCtor) {\r\n  if (typeof(Object.create) === 'function') {\r\n    // implementation from standard node.js 'util' module\r\n    ctor.super_ = superCtor;\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  } else {\r\n    // old school shim for old browsers\r\n    ctor.super_ = superCtor;\r\n    var TempCtor = function () {};\r\n    TempCtor.prototype = superCtor.prototype;\r\n    ctor.prototype = new TempCtor();\r\n    ctor.prototype.constructor = ctor;\r\n  }\r\n}\r\n\r\n// move dependent functions to a container so that\r\n// they can be overriden easier in no jquery environment (node.js)\r\nmodule.exports = {\r\n  defaults: _defaults,\r\n  inherits: _inherits\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.helpers.js\n// module id = 1\n// module chunks = 0","var drawAPI = require('./flowchart.functions');\r\nvar drawLine = drawAPI.drawLine;\r\nvar checkLineIntersection = drawAPI.checkLineIntersection;\r\n\r\nfunction Symbol(chart, options, symbol) {\r\n  this.chart = chart;\r\n  this.group = this.chart.paper.set();\r\n  this.symbol = symbol;\r\n  this.connectedTo = [];\r\n  this.symbolType = options.symbolType;\r\n  this.flowstate = (options.flowstate || 'future');\r\n  this.lineStyle = (options.lineStyle || {});\r\n  this.key = (options.key || '');\r\n\r\n  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\r\n\r\n  this.text = this.chart.paper.text(0, 0, options.text);\r\n  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\r\n  if (options.key) { this.text.node.id = options.key + 't'; }\r\n  this.text.node.setAttribute('class', this.getAttr('class') + 't');\r\n\r\n  this.text.attr({\r\n    'text-anchor': 'start',\r\n    'x'          : this.getAttr('text-margin'),\r\n    'fill'       : this.getAttr('font-color'),\r\n    'font-size'  : this.getAttr('font-size')\r\n  });\r\n\r\n  var font  = this.getAttr('font');\r\n  var fontF = this.getAttr('font-family');\r\n  var fontW = this.getAttr('font-weight');\r\n\r\n  if (font) this.text.attr({ 'font': font });\r\n  if (fontF) this.text.attr({ 'font-family': fontF });\r\n  if (fontW) this.text.attr({ 'font-weight': fontW });\r\n\r\n  if (options.link) { this.text.attr('href', options.link); }\r\n  if (options.target) { this.text.attr('target', options.target); }\r\n\r\n  var maxWidth = this.getAttr('maxWidth');\r\n  if (maxWidth) {\r\n    // using this approach: http://stackoverflow.com/a/3153457/22466\r\n    var words = options.text.split(' ');\r\n    var tempText = \"\";\r\n    for (var i=0, ii=words.length; i<ii; i++) {\r\n      var word = words[i];\r\n      this.text.attr(\"text\", tempText + \" \" + word);\r\n      if (this.text.getBBox().width > maxWidth) {\r\n        tempText += \"\\n\" + word;\r\n      } else {\r\n        tempText += \" \" + word;\r\n      }\r\n    }\r\n    this.text.attr(\"text\", tempText.substring(1));\r\n  }\r\n\r\n  this.group.push(this.text);\r\n\r\n  if (symbol) {\r\n    var tmpMargin = this.getAttr('text-margin');\r\n\r\n    symbol.attr({\r\n      'fill' : this.getAttr('fill'),\r\n      'stroke' : this.getAttr('element-color'),\r\n      'stroke-width' : this.getAttr('line-width'),\r\n      'width' : this.text.getBBox().width + 2 * tmpMargin,\r\n      'height' : this.text.getBBox().height + 2 * tmpMargin\r\n    });\r\n\r\n    symbol.node.setAttribute('class', this.getAttr('class'));\r\n\r\n    if (options.link) { symbol.attr('href', options.link); }\r\n    if (options.target) { symbol.attr('target', options.target); }\r\n    if (options.key) { symbol.node.id = options.key; }\r\n\r\n    this.group.push(symbol);\r\n    symbol.insertBefore(this.text);\r\n\r\n    this.text.attr({\r\n      'y': symbol.getBBox().height/2\r\n    });\r\n\r\n    this.initialize();\r\n  }\r\n\r\n}\r\n\r\n/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\r\nSymbol.prototype.getAttr = function(attName) {\r\n  if (!this.chart) {\r\n    return undefined;\r\n  }\r\n  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\r\n  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\r\n  var opt1;\r\n  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\r\n    opt1 = this.chart.options.flowstate[this.flowstate][attName];\r\n  }\r\n  return (opt1 || opt2 || opt3);\r\n};\r\n\r\nSymbol.prototype.initialize = function() {\r\n  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\r\n\r\n  this.width = this.group.getBBox().width;\r\n  this.height = this.group.getBBox().height;\r\n};\r\n\r\nSymbol.prototype.getCenter = function() {\r\n  return {x: this.getX() + this.width/2,\r\n          y: this.getY() + this.height/2};\r\n};\r\n\r\nSymbol.prototype.getX = function() {\r\n  return this.group.getBBox().x;\r\n};\r\n\r\nSymbol.prototype.getY = function() {\r\n  return this.group.getBBox().y;\r\n};\r\n\r\nSymbol.prototype.shiftX = function(x) {\r\n  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\r\n};\r\n\r\nSymbol.prototype.setX = function(x) {\r\n  this.group.transform('t' + x + ',' + this.getY());\r\n};\r\n\r\nSymbol.prototype.shiftY = function(y) {\r\n  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\r\n};\r\n\r\nSymbol.prototype.setY = function(y) {\r\n  this.group.transform('t' + this.getX() + ',' + y);\r\n};\r\n\r\nSymbol.prototype.getTop = function() {\r\n  var y = this.getY();\r\n  var x = this.getX() + this.width/2;\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.getBottom = function() {\r\n  var y = this.getY() + this.height;\r\n  var x = this.getX() + this.width/2;\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.getLeft = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX();\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.getRight = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX() + this.group.getBBox().width;\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.render = function() {\r\n  if (this.next) {\r\n\r\n    var lineLength = this.getAttr('line-length');\r\n\r\n    if (this.next_direction === 'right') {\r\n\r\n      var rightPoint = this.getRight();\r\n\r\n      if (!this.next.isPositioned) {\r\n\r\n        this.next.setY(rightPoint.y - this.next.height/2);\r\n        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\r\n        var self = this;\r\n        (function shift() {\r\n          var hasSymbolUnder = false;\r\n          var symb;\r\n          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n            symb = self.chart.symbols[i];\r\n\r\n            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\r\n            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (hasSymbolUnder) {\r\n            self.next.setX(symb.getX() + symb.width + lineLength);\r\n            shift();\r\n          }\r\n        })();\r\n\r\n        this.next.isPositioned = true;\r\n\r\n        this.next.render();\r\n      }\r\n    } else {\r\n      var bottomPoint = this.getBottom();\r\n\r\n      if (!this.next.isPositioned) {\r\n        this.next.shiftY(this.getY() + this.height + lineLength);\r\n        this.next.setX(bottomPoint.x - this.next.width/2);\r\n        this.next.isPositioned = true;\r\n\r\n        this.next.render();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nSymbol.prototype.renderLines = function() {\r\n  if (this.next) {\r\n    if (this.next_direction) {\r\n      this.drawLineTo(this.next, '', this.next_direction);\r\n    } else {\r\n      this.drawLineTo(this.next);\r\n    }\r\n  }\r\n};\r\n\r\nSymbol.prototype.drawLineTo = function(symbol, text, origin) {\r\n  if (this.connectedTo.indexOf(symbol) < 0) {\r\n    this.connectedTo.push(symbol);\r\n  }\r\n\r\n  var x = this.getCenter().x,\r\n      y = this.getCenter().y,\r\n      right = this.getRight(),\r\n      bottom = this.getBottom(),\r\n      left = this.getLeft();\r\n\r\n  var symbolX = symbol.getCenter().x,\r\n      symbolY = symbol.getCenter().y,\r\n      symbolTop = symbol.getTop(),\r\n      symbolRight = symbol.getRight(),\r\n      symbolLeft = symbol.getLeft();\r\n\r\n  var isOnSameColumn = x === symbolX,\r\n      isOnSameLine = y === symbolY,\r\n      isUnder = y < symbolY,\r\n      isUpper = y > symbolY || this === symbol,\r\n      isLeft = x > symbolX,\r\n      isRight = x < symbolX;\r\n\r\n  var maxX = 0,\r\n      line,\r\n      lineLength = this.getAttr('line-length'),\r\n      lineWith = this.getAttr('line-width');\r\n\r\n  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\r\n    line = drawLine(this.chart, bottom, symbolTop, text);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x;\r\n  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\r\n    line = drawLine(this.chart, right, symbolLeft, text);\r\n    this.rightStart = true;\r\n    symbol.leftEnd = true;\r\n    maxX = symbolLeft.x;\r\n  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\r\n    line = drawLine(this.chart, left, symbolRight, text);\r\n    this.leftStart = true;\r\n    symbol.rightEnd = true;\r\n    maxX = symbolRight.x;\r\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\r\n    line = drawLine(this.chart, right, [\r\n      {x: right.x + lineLength/2, y: right.y},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\r\n    line = drawLine(this.chart, right, [\r\n      {x: right.x + lineLength/2, y: right.y},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((!origin || origin === 'bottom') && isLeft) {\r\n    if (this.leftEnd && isUpper) {\r\n      line = drawLine(this.chart, bottom, [\r\n        {x: bottom.x, y: bottom.y + lineLength/2},\r\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\r\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\r\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n        {x: symbolTop.x, y: symbolTop.y}\r\n      ], text);\r\n    } else {\r\n      line = drawLine(this.chart, bottom, [\r\n        {x: bottom.x, y: symbolTop.y - lineLength/2},\r\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n        {x: symbolTop.x, y: symbolTop.y}\r\n      ], text);\r\n    }\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n  } else if ((!origin || origin === 'bottom') && isRight) {\r\n    line = drawLine(this.chart, bottom, [\r\n      {x: bottom.x, y: bottom.y + lineLength/2},\r\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\r\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n  } else if ((origin && origin === 'right') && isLeft) {\r\n    line = drawLine(this.chart, right, [\r\n      {x: right.x + lineLength/2, y: right.y},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((origin && origin === 'right') && isRight) {\r\n    line = drawLine(this.chart, right, [\r\n      {x: symbolTop.x, y: right.y},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\r\n    line = drawLine(this.chart, bottom, [\r\n      {x: bottom.x, y: bottom.y + lineLength/2},\r\n      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x + lineLength/2;\r\n  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\r\n    var diffX = left.x - lineLength/2;\r\n    if (symbolLeft.x < left.x) {\r\n      diffX = symbolLeft.x - lineLength/2;\r\n    }\r\n    line = drawLine(this.chart, left, [\r\n      {x: diffX, y: left.y},\r\n      {x: diffX, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.leftStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = left.x;\r\n  } else if ((origin === 'left')) {\r\n    line = drawLine(this.chart, left, [\r\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\r\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.leftStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = left.x;\r\n  }\r\n\r\n  //update line style\r\n  if (this.lineStyle[symbol.key] && line){\r\n      line.attr( this.lineStyle[symbol.key]);\r\n  }\r\n\r\n  if (line) {\r\n    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\r\n      var otherLine = this.chart.lines[l];\r\n      var len;\r\n\r\n      var ePath = otherLine.attr('path'),\r\n          lPath = line.attr('path');\r\n\r\n      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\r\n        var newPath = [];\r\n        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\r\n        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\r\n\r\n        var line1_from_x = newPath[0][1];\r\n        var line1_from_y = newPath[0][2];\r\n        var line1_to_x = newPath[1][1];\r\n        var line1_to_y = newPath[1][2];\r\n\r\n        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\r\n          var newLinePath = [];\r\n          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\r\n          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\r\n\r\n          var line2_from_x = newLinePath[0][1];\r\n          var line2_from_y = newLinePath[0][2];\r\n          var line2_to_x = newLinePath[1][1];\r\n          var line2_to_y = newLinePath[1][2];\r\n\r\n          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\r\n          if (res.onLine1 && res.onLine2) {\r\n\r\n            var newSegment;\r\n            if (line2_from_y === line2_to_y) {\r\n              if (line2_from_x > line2_to_x) {\r\n                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              } else {\r\n                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              }\r\n            } else {\r\n              if (line2_from_y > line2_to_y) {\r\n                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              } else {\r\n                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              }\r\n            }\r\n\r\n            lP += 2;\r\n            len += 2;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.chart.lines.push(line);\r\n  }\r\n\r\n  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\r\n    this.chart.maxXFromLine = maxX;\r\n  }\r\n};\r\n\r\nmodule.exports = Symbol;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.js\n// module id = 2\n// module chunks = 0","function drawPath(chart, location, points) {\r\n  var i, len;\r\n  var path = 'M{0},{1}';\r\n  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\r\n    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n  }\r\n  var pathValues = [location.x, location.y];\r\n  for (i = 0, len = points.length; i < len; i++) {\r\n    pathValues.push(points[i].x);\r\n    pathValues.push(points[i].y);\r\n  }\r\n  var symbol = chart.paper.path(path, pathValues);\r\n  symbol.attr('stroke', chart.options['element-color']);\r\n  symbol.attr('stroke-width', chart.options['line-width']);\r\n\r\n  var font = chart.options.font;\r\n  var fontF = chart.options['font-family'];\r\n  var fontW = chart.options['font-weight'];\r\n\r\n  if (font) symbol.attr({ 'font': font });\r\n  if (fontF) symbol.attr({ 'font-family': fontF });\r\n  if (fontW) symbol.attr({ 'font-weight': fontW });\r\n\r\n  return symbol;\r\n}\r\n\r\nfunction drawLine(chart, from, to, text) {\r\n  var i, len;\r\n\r\n  if (Object.prototype.toString.call(to) !== '[object Array]') {\r\n    to = [to];\r\n  }\r\n\r\n  var path = 'M{0},{1}';\r\n  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\r\n    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n  }\r\n  var pathValues = [from.x, from.y];\r\n  for (i = 0, len = to.length; i < len; i++) {\r\n    pathValues.push(to[i].x);\r\n    pathValues.push(to[i].y);\r\n  }\r\n\r\n  var line = chart.paper.path(path, pathValues);\r\n  line.attr({\r\n    stroke: chart.options['line-color'],\r\n    'stroke-width': chart.options['line-width'],\r\n    'arrow-end': chart.options['arrow-end']\r\n  });\r\n\r\n  var font = chart.options.font;\r\n  var fontF = chart.options['font-family'];\r\n  var fontW = chart.options['font-weight'];\r\n\r\n  if (font) line.attr({ 'font': font });\r\n  if (fontF) line.attr({ 'font-family': fontF });\r\n  if (fontW) line.attr({ 'font-weight': fontW });\r\n\r\n  if (text) {\r\n\r\n    var centerText = false;\r\n\r\n    var textPath = chart.paper.text(0, 0, text);\r\n\r\n    var isHorizontal = false;\r\n    var firstTo = to[0];\r\n\r\n    if (from.y === firstTo.y) {\r\n      isHorizontal = true;\r\n    }\r\n\r\n    var x = 0,\r\n        y = 0;\r\n\r\n    if (centerText) {\r\n      if (from.x > firstTo.x) {\r\n        x = from.x - (from.x - firstTo.x)/2;\r\n      } else {\r\n        x = firstTo.x - (firstTo.x - from.x)/2;\r\n      }\r\n\r\n      if (from.y > firstTo.y) {\r\n        y = from.y - (from.y - firstTo.y)/2;\r\n      } else {\r\n        y = firstTo.y - (firstTo.y - from.y)/2;\r\n      }\r\n\r\n      if (isHorizontal) {\r\n        x -= textPath.getBBox().width/2;\r\n        y -= chart.options['text-margin'];\r\n      } else {\r\n        x += chart.options['text-margin'];\r\n        y -= textPath.getBBox().height/2;\r\n      }\r\n    } else {\r\n      x = from.x;\r\n      y = from.y;\r\n\r\n      if (isHorizontal) {\r\n        x += chart.options['text-margin']/2;\r\n        y -= chart.options['text-margin'];\r\n      } else {\r\n        x += chart.options['text-margin']/2;\r\n        y += chart.options['text-margin'];\r\n      }\r\n    }\r\n\r\n    textPath.attr({\r\n      'text-anchor': 'start',\r\n      'font-size': chart.options['font-size'],\r\n      'fill': chart.options['font-color'],\r\n      x: x,\r\n      y: y\r\n    });\r\n\r\n    if (font) textPath.attr({ 'font': font });\r\n    if (fontF) textPath.attr({ 'font-family': fontF });\r\n    if (fontW) textPath.attr({ 'font-weight': fontW });\r\n  }\r\n\r\n  return line;\r\n}\r\n\r\nfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\r\n  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\r\n  var denominator, a, b, numerator1, numerator2, result = {\r\n    x: null,\r\n    y: null,\r\n    onLine1: false,\r\n    onLine2: false\r\n  };\r\n  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\r\n  if (denominator === 0) {\r\n    return result;\r\n  }\r\n  a = line1StartY - line2StartY;\r\n  b = line1StartX - line2StartX;\r\n  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\r\n  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\r\n  a = numerator1 / denominator;\r\n  b = numerator2 / denominator;\r\n\r\n  // if we cast these lines infinitely in both directions, they intersect here:\r\n  result.x = line1StartX + (a * (line1EndX - line1StartX));\r\n  result.y = line1StartY + (a * (line1EndY - line1StartY));\r\n  /*\r\n  // it is worth noting that this should be the same as:\r\n  x = line2StartX + (b * (line2EndX - line2StartX));\r\n  y = line2StartX + (b * (line2EndY - line2StartY));\r\n  */\r\n  // if line1 is a segment and line2 is infinite, they intersect if:\r\n  if (a > 0 && a < 1) {\r\n    result.onLine1 = true;\r\n  }\r\n  // if line2 is a segment and line1 is infinite, they intersect if:\r\n  if (b > 0 && b < 1) {\r\n    result.onLine2 = true;\r\n  }\r\n  // if line1 and line2 are segments, they intersect if both of the above are true\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n\tdrawPath: drawPath,\r\n\tdrawLine: drawLine,\r\n\tcheckLineIntersection: checkLineIntersection\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.functions.js\n// module id = 3\n// module chunks = 0","var FlowChart = require('./flowchart.chart');\r\nvar Start = require('./flowchart.symbol.start');\r\nvar End = require('./flowchart.symbol.end');\r\nvar Operation = require('./flowchart.symbol.operation');\r\nvar InputOutput = require('./flowchart.symbol.inputoutput');\r\nvar Subroutine = require('./flowchart.symbol.subroutine');\r\nvar Condition = require('./flowchart.symbol.condition');\r\n\r\nfunction parse(input) {\r\n  input = input || '';\r\n  input = input.trim();\r\n\r\n  var chart = {\r\n    symbols: {},\r\n    start: null,\r\n    drawSVG: function(container, options) {\r\n      var self = this;\r\n\r\n      if (this.diagram) {\r\n        this.diagram.clean();\r\n      }\r\n\r\n      var diagram = new FlowChart(container, options);\r\n      this.diagram = diagram;\r\n      var dispSymbols = {};\r\n\r\n      function getDisplaySymbol(s) {\r\n        if (dispSymbols[s.key]) {\r\n          return dispSymbols[s.key];\r\n        }\r\n\r\n        switch (s.symbolType) {\r\n          case 'start':\r\n            dispSymbols[s.key] = new Start(diagram, s);\r\n            break;\r\n          case 'end':\r\n            dispSymbols[s.key] = new End(diagram, s);\r\n            break;\r\n          case 'operation':\r\n            dispSymbols[s.key] = new Operation(diagram, s);\r\n            break;\r\n          case 'inputoutput':\r\n            dispSymbols[s.key] = new InputOutput(diagram, s); \r\n            break;\r\n          case 'subroutine':\r\n            dispSymbols[s.key] = new Subroutine(diagram, s);\r\n            break;\r\n          case 'condition':\r\n            dispSymbols[s.key] = new Condition(diagram, s);\r\n            break;\r\n          default:\r\n            return new Error('Wrong symbol type!');\r\n        }\r\n\r\n        return dispSymbols[s.key];\r\n      }\r\n\r\n      (function constructChart(s, prevDisp, prev) {\r\n        var dispSymb = getDisplaySymbol(s);\r\n\r\n        if (self.start === s) {\r\n          diagram.startWith(dispSymb);\r\n        } else if (prevDisp && prev && !prevDisp.pathOk) {\r\n          if (prevDisp instanceof(Condition)) {\r\n            if (prev.yes === s) {\r\n              prevDisp.yes(dispSymb);\r\n            }\r\n            if (prev.no === s) {\r\n              prevDisp.no(dispSymb);\r\n            }\r\n          } else {\r\n            prevDisp.then(dispSymb);\r\n          }\r\n        }\r\n\r\n        if (dispSymb.pathOk) {\r\n          return dispSymb;\r\n        }\r\n\r\n        if (dispSymb instanceof(Condition)) {\r\n          if (s.yes) {\r\n            constructChart(s.yes, dispSymb, s);\r\n          }\r\n          if (s.no) {\r\n            constructChart(s.no, dispSymb, s);\r\n          }\r\n        } else if (s.next) {\r\n          constructChart(s.next, dispSymb, s);\r\n        }\r\n\r\n        return dispSymb;\r\n      })(this.start);\r\n\r\n      diagram.render();\r\n    },\r\n    clean: function() {\r\n      this.diagram.clean();\r\n    }\r\n  };\r\n\r\n  var lines = [];\r\n  var prevBreak = 0;\r\n  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\r\n    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\r\n      var line0 = input.substring(prevBreak, i0);\r\n      prevBreak = i0 + 1;\r\n      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\r\n    }\r\n  }\r\n\r\n  if(prevBreak < input.length) {\r\n    lines.push(input.substr(prevBreak));\r\n  }\r\n\r\n  for (var l = 1, len = lines.length; l < len;) {\r\n    var currentLine = lines[l];\r\n\r\n    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\r\n      lines[l - 1] += '\\n' + currentLine;\r\n      lines.splice(l, 1);\r\n      len--;\r\n    } else {\r\n      l++;\r\n    }\r\n  }\r\n\r\n  function getStyle(s){\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      return s.substring(startIndex,endIndex);\r\n    }\r\n    return '{}';\r\n  }\r\n\r\n  function getSymbValue(s){\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      return s.substring(startIndex,endIndex);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  function getSymbol(s) {\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      return chart.symbols[s.substring(0, startIndex - 1)];   \r\n    }\r\n    return chart.symbols[s];\r\n  }\r\n\r\n  function getNextPath(s) {\r\n    var next = 'next';\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      next = flowSymb.substring(startIndex, endIndex);\r\n      if (next.indexOf(',') < 0) {\r\n        if (next !== 'yes' && next !== 'no') {\r\n          next = 'next, ' + next;\r\n        }\r\n      }\r\n    }\r\n    return next;\r\n  }\r\n\r\n  while (lines.length > 0) {\r\n    var line = lines.splice(0, 1)[0].trim();\r\n\r\n    if (line.indexOf('=>') >= 0) {\r\n      // definition\r\n      var parts = line.split('=>');\r\n      var symbol = {\r\n        key: parts[0].replace(/\\(.*\\)/, ''),\r\n        symbolType: parts[1],\r\n        text: null,\r\n        link: null,\r\n        target: null,\r\n        flowstate: null,\r\n        lineStyle: {},\r\n        params: {}\r\n      };\r\n\r\n      //parse parameters\r\n      var params = parts[0].match(/\\((.*)\\)/);\r\n      if (params && params.length > 1){\r\n        var entries = params[1].split(',');\r\n        for(var i = 0; i < entries.length; i++) {\r\n          var entry = entries[0].split('=');\r\n          if (entry.length == 2){\r\n            symbol.params[entry[0]] = entry[1];\r\n          }\r\n        }\r\n      }\r\n\r\n      var sub;\r\n\r\n      if (symbol.symbolType.indexOf(': ') >= 0) {\r\n        sub = symbol.symbolType.split(': ');\r\n        symbol.symbolType = sub.shift();\r\n        symbol.text = sub.join(': ');\r\n      }\r\n\r\n      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\r\n        sub = symbol.text.split(':>');\r\n        symbol.text = sub.shift();\r\n        symbol.link = sub.join(':>');\r\n      } else if (symbol.symbolType.indexOf(':>') >= 0) {\r\n        sub = symbol.symbolType.split(':>');\r\n        symbol.symbolType = sub.shift();\r\n        symbol.link = sub.join(':>');\r\n      }\r\n\r\n      if (symbol.symbolType.indexOf('\\n') >= 0) {\r\n        symbol.symbolType = symbol.symbolType.split('\\n')[0];\r\n      }\r\n\r\n      /* adding support for links */\r\n      if (symbol.link) {\r\n        var startIndex = symbol.link.indexOf('[') + 1;\r\n        var endIndex = symbol.link.indexOf(']');\r\n        if (startIndex >= 0 && endIndex >= 0) {\r\n          symbol.target = symbol.link.substring(startIndex, endIndex);\r\n          symbol.link = symbol.link.substring(0, startIndex - 1);\r\n        }\r\n      }\r\n      /* end of link support */\r\n\r\n      /* adding support for flowstates */\r\n      if (symbol.text) {\r\n        if (symbol.text.indexOf('|') >= 0) {\r\n          var txtAndState = symbol.text.split('|');\r\n          symbol.flowstate = txtAndState.pop().trim();\r\n          symbol.text = txtAndState.join('|');\r\n        }\r\n      }\r\n      /* end of flowstate support */\r\n\r\n      chart.symbols[symbol.key] = symbol;\r\n\r\n    } else if (line.indexOf('->') >= 0) {\r\n      // flow\r\n      var flowSymbols = line.split('->');\r\n      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\r\n        var flowSymb = flowSymbols[i];\r\n        var symbVal = getSymbValue(flowSymb);\r\n\r\n        if (symbVal === 'true' || symbVal === 'false') {\r\n          // map true or false to yes or no respectively\r\n          flowSymb = flowSymb.replace('true', 'yes');\r\n          flowSymb = flowSymb.replace('false', 'no');\r\n        }\r\n\r\n        var realSymb = getSymbol(flowSymb);\r\n        var next = getNextPath(flowSymb);\r\n\r\n        var direction = null;\r\n        if (next.indexOf(',') >= 0) {\r\n          var condOpt = next.split(',');\r\n          next = condOpt[0];\r\n          direction = condOpt[1].trim();\r\n        }\r\n\r\n        if (!chart.start) {\r\n          chart.start = realSymb;\r\n        }\r\n\r\n        if (i + 1 < lenS) {\r\n          var nextSymb = flowSymbols[i + 1];\r\n          realSymb[next] = getSymbol(nextSymb);\r\n          realSymb['direction_' + next] = direction;\r\n          direction = null;\r\n        }\r\n      }\r\n    } else if (line.indexOf('@>') >= 0) {\r\n\r\n      // line style\r\n      var lineStyleSymbols = line.split('@>');\r\n      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\r\n\r\n        if ((i+1) != lenS){\r\n          var curSymb = getSymbol(lineStyleSymbols[i]);\r\n          var nextSymb = getSymbol(lineStyleSymbols[i+1]);\r\n\r\n          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i+1]));\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return chart;\r\n}\r\n\r\nmodule.exports = parse;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.parse.js\n// module id = 4\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\nvar drawAPI = require('./flowchart.functions');\r\nvar drawPath = drawAPI.drawPath;\r\n\r\nfunction Condition(chart, options) {\r\n  options = options || {};\r\n  Symbol.call(this, chart, options);\r\n  this.textMargin = this.getAttr('text-margin');\r\n  this.yes_direction = 'bottom';\r\n  this.no_direction = 'right';\r\n  this.params = options.params;\r\n  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\r\n    if (options.direction_yes === 'right') {\r\n      this.no_direction = 'bottom';\r\n      this.yes_direction = 'right';\r\n    } else {\r\n      this.no_direction = 'right';\r\n      this.yes_direction = 'bottom';\r\n    }\r\n  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\r\n    if (options.direction_no === 'right') {\r\n      this.yes_direction = 'bottom';\r\n      this.no_direction = 'right';\r\n    } else {\r\n      this.yes_direction = 'right';\r\n      this.no_direction = 'bottom';\r\n    }\r\n  } else {\r\n    this.yes_direction = 'bottom';\r\n    this.no_direction = 'right';\r\n  }\r\n\r\n  this.yes_direction = this.yes_direction || 'bottom';\r\n  this.no_direction = this.no_direction || 'right';\r\n\r\n  this.text.attr({\r\n    x: this.textMargin * 2\r\n  });\r\n\r\n  var width = this.text.getBBox().width + 3 * this.textMargin;\r\n  width += width/2;\r\n  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n  height += height/2;\r\n  height = Math.max(width * 0.5, height);\r\n  var startX = width/4;\r\n  var startY = height/4;\r\n\r\n  this.text.attr({\r\n    x: startX + this.textMargin/2\r\n  });\r\n\r\n  var start = {x: startX, y: startY};\r\n  var points = [\r\n    {x: startX - width/4, y: startY + height/4},\r\n    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\r\n    {x: startX - width/4 + width, y: startY + height/4},\r\n    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\r\n    {x: startX - width/4, y: startY + height/4}\r\n  ];\r\n\r\n  var symbol = drawPath(chart, start, points);\r\n\r\n  symbol.attr({\r\n    stroke: this.getAttr('element-color'),\r\n    'stroke-width': this.getAttr('line-width'),\r\n    fill: this.getAttr('fill')\r\n  });\r\n  if (options.link) { symbol.attr('href', options.link); }\r\n  if (options.target) { symbol.attr('target', options.target); }\r\n  if (options.key) { symbol.node.id = options.key; }\r\n  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\r\n  this.text.attr({\r\n    y: symbol.getBBox().height/2\r\n  });\r\n\r\n  this.group.push(symbol);\r\n  symbol.insertBefore(this.text);\r\n\r\n  this.initialize();\r\n}\r\ninherits(Condition, Symbol);\r\n\r\nCondition.prototype.render = function() {\r\n\r\n  if (this.yes_direction) {\r\n    this[this.yes_direction + '_symbol'] = this.yes_symbol;\r\n  }\r\n\r\n  if (this.no_direction) {\r\n    this[this.no_direction + '_symbol'] = this.no_symbol;\r\n  }\r\n\r\n  var lineLength = this.getAttr('line-length');\r\n\r\n  if (this.bottom_symbol) {\r\n    var bottomPoint = this.getBottom();\r\n\r\n    if (!this.bottom_symbol.isPositioned) {\r\n      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\r\n      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\r\n      this.bottom_symbol.isPositioned = true;\r\n\r\n      this.bottom_symbol.render();\r\n    }\r\n  }\r\n\r\n  if (this.right_symbol) {\r\n    var rightPoint = this.getRight();\r\n\r\n    if (!this.right_symbol.isPositioned) {\r\n\r\n      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\r\n      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\r\n      var self = this;\r\n      (function shift() {\r\n        var hasSymbolUnder = false;\r\n        var symb;\r\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n          symb = self.chart.symbols[i];\r\n\r\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \r\n            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\r\n            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (hasSymbolUnder) {\r\n          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\r\n          shift();\r\n        }\r\n      })();\r\n\r\n      this.right_symbol.isPositioned = true;\r\n\r\n      this.right_symbol.render();\r\n    }\r\n  }\r\n};\r\n\r\nCondition.prototype.renderLines = function() {\r\n  if (this.yes_symbol) {\r\n    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\r\n  }\r\n\r\n  if (this.no_symbol) {\r\n    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\r\n  }\r\n};\r\n\r\nmodule.exports = Condition;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.condition.js\n// module id = 5\n// module chunks = 0","var Raphael = require('raphael');\r\nvar defaults = require('./flowchart.helpers').defaults;\r\nvar defaultOptions = require('./flowchart.defaults');\r\nvar Condition = require('./flowchart.symbol.condition');\r\n\r\nfunction FlowChart(container, options) {\r\n  options = options || {};\r\n\r\n  this.paper = new Raphael(container);\r\n\r\n  this.options = defaults(options, defaultOptions);\r\n\r\n  this.symbols = [];\r\n  this.lines = [];\r\n  this.start = null;\r\n}\r\n\r\nFlowChart.prototype.handle = function(symbol) {\r\n  if (this.symbols.indexOf(symbol) <= -1) {\r\n    this.symbols.push(symbol);\r\n  }\r\n\r\n  var flowChart = this;\r\n\r\n  if (symbol instanceof(Condition)) {\r\n    symbol.yes = function(nextSymbol) {\r\n      symbol.yes_symbol = nextSymbol;\r\n      if(symbol.no_symbol) {\r\n        symbol.pathOk = true;\r\n      }\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n    symbol.no = function(nextSymbol) {\r\n      symbol.no_symbol = nextSymbol;\r\n      if(symbol.yes_symbol) {\r\n        symbol.pathOk = true;\r\n      }\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n  } else {\r\n    symbol.then = function(nextSymbol) {\r\n      symbol.next = nextSymbol;\r\n      symbol.pathOk = true;\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n  }\r\n\r\n  return symbol;\r\n};\r\n\r\nFlowChart.prototype.startWith = function(symbol) {\r\n  this.start = symbol;\r\n  return this.handle(symbol);\r\n};\r\n\r\nFlowChart.prototype.render = function() {\r\n  var maxWidth = 0,\r\n      maxHeight = 0,\r\n      i = 0,\r\n      len = 0,\r\n      maxX = 0,\r\n      maxY = 0,\r\n      minX = 0,\r\n      minY = 0,\r\n      symbol,\r\n      line;\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    if (symbol.width > maxWidth) {\r\n      maxWidth = symbol.width;\r\n    }\r\n    if (symbol.height > maxHeight) {\r\n      maxHeight = symbol.height;\r\n    }\r\n  }\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\r\n    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\r\n  }\r\n\r\n  this.start.render();\r\n  // for (i = 0, len = this.symbols.length; i < len; i++) {\r\n  //   symbol = this.symbols[i];\r\n  //   symbol.render();\r\n  // }\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    symbol.renderLines();\r\n  }\r\n\r\n  maxX = this.maxXFromLine;\r\n\r\n  var x;\r\n  var y;\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    x = symbol.getX() + symbol.width;\r\n    y = symbol.getY() + symbol.height;\r\n    if (x > maxX) {\r\n      maxX = x;\r\n    }\r\n    if (y > maxY) {\r\n      maxY = y;\r\n    }\r\n  }\r\n\r\n  for (i = 0, len = this.lines.length; i < len; i++) {\r\n    line = this.lines[i].getBBox();\r\n    x = line.x;\r\n    y = line.y;\r\n    var x2 = line.x2;\r\n    var y2 = line.y2;\r\n    if (x < minX) {\r\n      minX = x;\r\n    }\r\n    if (y < minY) {\r\n      minY = y;\r\n    }\r\n    if (x2 > maxX) {\r\n      maxX = x2;\r\n    }\r\n    if (y2 > maxY) {\r\n      maxY = y2;\r\n    }\r\n  }\r\n\r\n  var scale = this.options['scale'];\r\n  var lineWidth = this.options['line-width'];\r\n\r\n  if (minX < 0) minX -= lineWidth;\r\n  if (minY < 0) minY -= lineWidth;\r\n\r\n  var width = maxX + lineWidth - minX;\r\n  var height = maxY + lineWidth - minY;\r\n\r\n  this.paper.setSize(width * scale, height * scale);\r\n  this.paper.setViewBox(minX, minY, width, height, true);\r\n};\r\n\r\nFlowChart.prototype.clean = function() {\r\n  if (this.paper) {\r\n    var paperDom = this.paper.canvas;\r\n    paperDom.parentNode.removeChild(paperDom);\r\n  }\r\n};\r\n\r\nmodule.exports = FlowChart;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.chart.js\n// module id = 6\n// module chunks = 0","// defaults\r\nmodule.exports = {\r\n  'x': 0,\r\n  'y': 0,\r\n  'line-width': 3,\r\n  'line-length': 50,\r\n  'text-margin': 10,\r\n  'font-size': 14,\r\n  'font-color': 'black',\r\n  // 'font': 'normal',\r\n  // 'font-family': 'calibri',\r\n  // 'font-weight': 'normal',\r\n  'line-color': 'black',\r\n  'element-color': 'black',\r\n  'fill': 'white',\r\n  'yes-text': 'yes',\r\n  'no-text': 'no',\r\n  'arrow-end': 'block',\r\n  'class': 'flowchart',\r\n  'scale': 1,\r\n  'symbols': {\r\n    'start': {},\r\n    'end': {},\r\n    'condition': {},\r\n    'inputoutput': {},\r\n    'operation': {},\r\n    'subroutine': {}\r\n  }//,\r\n  // 'flowstate' : {\r\n  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\r\n  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\r\n  //   'future' : { 'fill': '#FFFF99'},\r\n  //   'invalid': {'fill': '#444444'}\r\n  // }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.defaults.js\n// module id = 7\n// module chunks = 0","// add indexOf to non ECMA-262 standard compliant browsers\r\nif (!Array.prototype.indexOf) {\r\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\r\n    \"use strict\";\r\n    if (this === null) {\r\n      throw new TypeError();\r\n    }\r\n    var t = Object(this);\r\n    var len = t.length >>> 0;\r\n    if (len === 0) {\r\n      return -1;\r\n    }\r\n    var n = 0;\r\n    if (arguments.length > 0) {\r\n      n = Number(arguments[1]);\r\n      if (n != n) { // shortcut for verifying if it's NaN\r\n        n = 0;\r\n      } else if (n !== 0 && n != Infinity && n != -Infinity) {\r\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n      }\r\n    }\r\n    if (n >= len) {\r\n      return -1;\r\n    }\r\n    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n    for (; k < len; k++) {\r\n      if (k in t && t[k] === searchElement) {\r\n        return k;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n}\r\n\r\n// add lastIndexOf to non ECMA-262 standard compliant browsers\r\nif (!Array.prototype.lastIndexOf) {\r\n  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\r\n    \"use strict\";\r\n    if (this === null) {\r\n      throw new TypeError();\r\n    }\r\n    var t = Object(this);\r\n    var len = t.length >>> 0;\r\n    if (len === 0) {\r\n      return -1;\r\n    }\r\n    var n = len;\r\n    if (arguments.length > 1) {\r\n      n = Number(arguments[1]);\r\n      if (n != n) {\r\n        n = 0;\r\n      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\r\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n      }\r\n    }\r\n    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\r\n    for (; k >= 0; k--) {\r\n      if (k in t && t[k] === searchElement) {\r\n        return k;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n}\r\n\r\nif (!String.prototype.trim) {\r\n  String.prototype.trim = function() {\r\n    return this.replace(/^\\s+|\\s+$/g, '');\r\n  };\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.shim.js\n// module id = 8\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction End(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n  options = options || {};\r\n  options.text = options.text || 'End';\r\n  Symbol.call(this, chart, options, symbol);\r\n}\r\ninherits(End, Symbol);\r\n\r\nmodule.exports = End;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.end.js\n// module id = 9\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\nvar drawAPI = require('./flowchart.functions');\r\nvar drawPath = drawAPI.drawPath;\r\n\r\nfunction InputOutput(chart, options) {\r\n  options = options || {};\r\n  Symbol.call(this, chart, options);\r\n  this.textMargin = this.getAttr('text-margin');\r\n\r\n  this.text.attr({\r\n    x: this.textMargin * 3\r\n  });\r\n\r\n  var width = this.text.getBBox().width + 4 * this.textMargin;\r\n  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n  var startX = this.textMargin;\r\n  var startY = height/2;\r\n\r\n  var start = {x: startX, y: startY};\r\n  var points = [\r\n    {x: startX - this.textMargin, y: height},\r\n    {x: startX - this.textMargin + width, y: height},\r\n    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\r\n    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\r\n    {x: startX, y: startY}\r\n  ];\r\n\r\n  var symbol = drawPath(chart, start, points);\r\n\r\n  symbol.attr({\r\n    stroke: this.getAttr('element-color'),\r\n    'stroke-width': this.getAttr('line-width'),\r\n    fill: this.getAttr('fill')\r\n  });\r\n  if (options.link) { symbol.attr('href', options.link); }\r\n  if (options.target) { symbol.attr('target', options.target); }\r\n  if (options.key) { symbol.node.id = options.key; }\r\n  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\r\n  this.text.attr({\r\n    y: symbol.getBBox().height/2\r\n  });\r\n\r\n  this.group.push(symbol);\r\n  symbol.insertBefore(this.text);\r\n\r\n  this.initialize();\r\n}\r\ninherits(InputOutput, Symbol);\r\n\r\nInputOutput.prototype.getLeft = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX() + this.textMargin;\r\n  return {x: x, y: y};\r\n};\r\n\r\nInputOutput.prototype.getRight = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX() + this.group.getBBox().width - this.textMargin;\r\n  return {x: x, y: y};\r\n};\r\n\r\nmodule.exports = InputOutput;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.inputoutput.js\n// module id = 10\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Operation(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n  options = options || {};\r\n  Symbol.call(this, chart, options, symbol);\r\n}\r\ninherits(Operation, Symbol);\r\n\r\nmodule.exports = Operation;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.operation.js\n// module id = 11\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Start(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n  options = options || {};\r\n  options.text = options.text || 'Start';\r\n  Symbol.call(this, chart, options, symbol);\r\n}\r\ninherits(Start, Symbol);\r\n\r\nmodule.exports = Start;\r\n\r\n// Start.prototype.render = function() {\r\n//   if (this.next) {\r\n//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\r\n\r\n//     var bottomPoint = this.getBottom();\r\n//     var topPoint = this.next.getTop();\r\n\r\n//     if (!this.next.isPositioned) {\r\n//       this.next.shiftY(this.getY() + this.height + lineLength);\r\n//       this.next.setX(bottomPoint.x - this.next.width/2);\r\n//       this.next.isPositioned = true;\r\n\r\n//       this.next.render();\r\n//     }\r\n//   }\r\n// };\r\n\r\n// Start.prototype.renderLines = function() {\r\n//   if (this.next) {\r\n//     this.drawLineTo(this.next);\r\n//   }\r\n// };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.start.js\n// module id = 12\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Subroutine(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n  options = options || {};\r\n  Symbol.call(this, chart, options, symbol);\r\n\r\n  symbol.attr({\r\n    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\r\n  });\r\n\r\n  this.text.attr({\r\n    'x': 2 * this.getAttr('text-margin')\r\n  });\r\n\r\n  var innerWrap = chart.paper.rect(0, 0, 0, 0);\r\n  innerWrap.attr({\r\n    x: this.getAttr('text-margin'),\r\n    stroke: this.getAttr('element-color'),\r\n    'stroke-width': this.getAttr('line-width'),\r\n    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\r\n    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\r\n    fill: this.getAttr('fill')\r\n  });\r\n  if (options.key) { innerWrap.node.id = options.key + 'i'; }\r\n\r\n  var font = this.getAttr('font');\r\n  var fontF = this.getAttr('font-family');\r\n  var fontW = this.getAttr('font-weight');\r\n\r\n  if (font) innerWrap.attr({ 'font': font });\r\n  if (fontF) innerWrap.attr({ 'font-family': fontF });\r\n  if (fontW) innerWrap.attr({ 'font-weight': fontW });\r\n\r\n  if (options.link) { innerWrap.attr('href', options.link); }\r\n  if (options.target) { innerWrap.attr('target', options.target); }\r\n  this.group.push(innerWrap);\r\n  innerWrap.insertBefore(this.text);\r\n\r\n  this.initialize();\r\n}\r\ninherits(Subroutine, Symbol);\r\n\r\nmodule.exports = Subroutine;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.subroutine.js\n// module id = 13\n// module chunks = 0","if (typeof jQuery != 'undefined') {\r\n\tvar parse = require('./flowchart.parse');\r\n\t(function( $ ) {\r\n\t\t$.fn.flowChart = function( options ) {\r\n\t\t\treturn this.each(function() {\r\n\t\t\t\tvar $this = $(this);\r\n\t\t\t\tvar chart = parse($this.text());\r\n\t\t\t\t$this.html('');\r\n\t\t\t\tchart.drawSVG(this, options);\r\n\t\t\t});\r\n\t\t};\r\n\t})(jQuery); // eslint-disable-line\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/jquery-plugin.js\n// module id = 14\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Raphael\"\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}